<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>自己満足プログラミング</title>
    <description>Reinventing the wheel.</description>
    <link>https://happyclam.github.io/</link>
    <atom:link href="https://happyclam.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 03 Jun 2021 13:34:05 +0900</pubDate>
    <lastBuildDate>Thu, 03 Jun 2021 13:34:05 +0900</lastBuildDate>
    <generator>Jekyll v3.9.1</generator>
    
      <item>
        <title>マンカラは後手でも勝てるか？</title>
        <description>&lt;h3 id=&quot;自分のアプリと他のアプリを手動で対戦させてみた&quot;&gt;自分のアプリと他のアプリを手動で対戦させてみた&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;以前の記事&lt;/a&gt;で６×２列のマンカラが先手必勝なのか後手必勝なのかを自作プログラムで調べましたが、時間がかかり過ぎるので結論が得られないままでした。そこで自分のアプリと他の強いアプリを対戦させてみて、その結果から石の数（豆の数）毎に先手必勝なのか後手必勝なのかを推測してみようと思います。&lt;br /&gt;
　google playに公開されているマンカラアプリの中で、マンカラカラハ（classicルール&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;）で遊ぶことが出来て、初期配置の石の数を３個から７個まで選択出来るアプリを３つ選んで、先手・後手の対戦結果から推測します。どのアプリと比較したかは別に公開しても構わないと思うのですが、もしかしたら作者に歓迎されない可能性もあるので使用したアプリ名は一応伏せておきます。また比較する時はアプリの強さ設定で全て&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;最強&lt;/code&gt;に設定して比較しています。&lt;/p&gt;

&lt;h3 id=&quot;対戦成績&quot;&gt;対戦成績&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;自分のアプリ&lt;/a&gt;は対戦結果を先手・後手別に記録出来る様にしているの&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;で、そのスクリーンショットを以下に並べます。&lt;br /&gt;
※画像クリックで拡大表示&lt;/p&gt;

&lt;h4 id=&quot;-豆３つの対戦成績&quot;&gt;* 豆３つの対戦成績&lt;/h4&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/results_3beans.png&quot;&gt;&lt;img src=&quot;/images/results_3beans.png&quot; alt=&quot;豆３つ&quot; width=&quot;480&quot; title=&quot;豆３つ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&quot;-豆４つの対戦成績&quot;&gt;* 豆４つの対戦成績&lt;/h4&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/results_4beans.png&quot;&gt;&lt;img src=&quot;/images/results_4beans.png&quot; alt=&quot;豆４つ&quot; width=&quot;480&quot; title=&quot;豆４つ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&quot;-豆５つの対戦成績&quot;&gt;* 豆５つの対戦成績&lt;/h4&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/results_5beans.png&quot;&gt;&lt;img src=&quot;/images/results_5beans.png&quot; alt=&quot;豆５つ&quot; width=&quot;480&quot; title=&quot;豆５つ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&quot;-豆６つの対戦成績&quot;&gt;* 豆６つの対戦成績&lt;/h4&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/results_6beans.png&quot;&gt;&lt;img src=&quot;/images/results_6beans.png&quot; alt=&quot;豆６つ&quot; width=&quot;480&quot; title=&quot;豆６つ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&quot;-豆７つの対戦成績&quot;&gt;* 豆７つの対戦成績&lt;/h4&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/results_7beans.png&quot;&gt;&lt;img src=&quot;/images/results_7beans.png&quot; alt=&quot;豆７つ&quot; width=&quot;480&quot; title=&quot;豆７つ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　対戦成績表の見方ですが、&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;マンカラナッツ&lt;/a&gt;では&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい&lt;/code&gt;モード以外では初手をランダムに決めるようにしていて、勝負に拘っていないので、アプリが勝てるのかどうかを判断する場合は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい&lt;/code&gt;モード以外は見る必要がありません。勝ちの欄の数字はＡＩ対戦で人間側が勝った数字、つまり比較対象となっているアプリが勝ったということです。また比較するために選んだアプリが初手をランダムに決めているものもあるので、一回だけの対戦ではなく何回か対戦させました。&lt;br /&gt;
　注目すべきは黄色い丸で囲んだ部分の数字です。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;後手で勝つことが出来るか&lt;/code&gt;です。豆の数が３、４、５、７の時は後手の勝ち星が全て&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;で、比較対象のアプリが後手の場合は、何度やっても&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;自分のアプリ&lt;/a&gt;に勝てません。&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;自分のアプリ&lt;/a&gt;が数あるマンカラアプリの中で最強だと主張しているのではなく、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;マンカラカラハというゲームはお互いが最善を尽くせば先手必勝&lt;/code&gt;なのではないか？ということです。負けの欄の数字（比較対象のアプリが負けた数字＝&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;自分のアプリ&lt;/a&gt;が勝った数字）を見ると、勝ちの欄の数字より大きいので勝率は良い方だと思いますが、先に言ったように比較対象のアプリは初手をランダムに決めている（＝勝負に拘ってない）ものもあるので一概には言えません。マンカラでは初手で悪手を選択するとそれだけで勝てなくなるような気がします。&lt;br /&gt;
　また豆の数が６の時は先手でも後手でも勝ったり負けたりなので、どちらとも言えませんが双方が最善を尽くしたら引分けなのかもしれません。上の対戦成績結果以外で試していた時も引分けになる頻度が結構高かったです。&lt;/p&gt;

&lt;h3 id=&quot;結論&quot;&gt;結論&lt;/h3&gt;
&lt;p&gt;　豆の数１の時と２の時は&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;以前の記事&lt;/a&gt;で結論が出ていると思っているので、以下のように推測します。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;豆の数&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;１&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;２&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;３&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;４&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;５&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;６&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;７&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;カラハClassic&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け？&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;　強さの比較に使用したアプリも&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;自分のアプリ&lt;/a&gt;もおそらく似たような評価関数と、MIN-MAX法及びαβ法を使った先読み探索で指し手を決めていると思うので、この推測が絶対正しいとは言えません。先読みの手数に制限があるからです。&lt;br /&gt;
　今将棋や囲碁で流行っている機械学習（Deep Learning等）によるＡＩだと違う指し手を選んで全てのマンカラアプリに後手でも勝つなんてことがないとは言い切れませんが、マンカラは将棋や囲碁に較べたら変化の幅が狭いので、将棋や囲碁のように劇的な強さの向上はないでしょう。でも誰か試している人はいないのでしょうか？機械学習を使ったらどうなるか、ちょっと興味あります。&lt;br /&gt;
　機械学習（強化学習）を使った&lt;a href=&quot;https://play.google.com/store/apps/details?id=tictactoe_evo.io.github.happyclam&quot;&gt;三目並べアプリ&lt;/a&gt;では、結局MIN-MAX法を使ったものと同じ結果（双方が最善を尽くせば常に引分け）になるので、マンカラの場合も結局同じ結果が得られるだけかもしれません。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;カラハのclassicルールについては&lt;a href=&quot;/software/2020-08-09/mancala_easy&quot;&gt;以前の記事&lt;/a&gt;を見て下さい。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;先手・後手別の対戦結果を自分が知りたかったのでこの機能を付けました。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 22 Jan 2021 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/software/2021-01-22/mancala_evaluate02</link>
        <guid isPermaLink="true">https://happyclam.github.io/software/2021-01-22/mancala_evaluate02</guid>
        
        <category>dart</category>
        
        <category>android</category>
        
        <category>flutter</category>
        
        <category>c++</category>
        
        <category>mancala</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>詰将棋ならぬ詰マンカラ</title>
        <description>&lt;h3 id=&quot;マンカラも将棋も二人零和有限確定完全情報ゲーム&quot;&gt;マンカラも将棋も二人零和有限確定完全情報ゲーム&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;「マンカラ ナッツ」&lt;/a&gt;の評価関数は&lt;a href=&quot;/software/2020-08-10/mancalanuts&quot;&gt;アプリの説明ページ&lt;/a&gt;にも書いていますが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;先手の貯蔵所に溜まった豆の数 - 後手の貯蔵所に溜まった豆の数&lt;/code&gt;を返すようになっています。これは局面の形勢判断をするというよりズバリどっちが勝ちかを判断するための単純な評価関数で、将棋で言えば詰将棋専用の評価関数&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;のようなものです。将棋でよく駒得とか駒の働きとかの局面の特徴を捉えて形勢判断をしますが、マンカラの形勢判断をどうすればいいのか、いいアイデアが浮かばなかったので単純な豆の数の差だけを評価する評価関数を使っています。&lt;br /&gt;
　マンカラは将棋ほど変化が膨大ではなく、ゲーム終了までの手数も短いので、いきなり初手から詰み（勝ち）を読みに行くような評価関数を使ってるわけですが、今のところこれで良いかな？と思ってます&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h4 id=&quot;マンカラの棋譜&quot;&gt;マンカラの棋譜？&lt;/h4&gt;
&lt;p&gt;　マンカラは棋譜の記述方法が決まっていない？と思うので、指し手の位置を示すために以下の表を使います。&lt;/p&gt;

&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;br /&gt;後手のストア&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;13&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;11&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;10&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&amp;nbsp;9&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&amp;nbsp;8&lt;/td&gt;    
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;7&lt;br /&gt;先手のストア&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;&amp;nbsp;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;&amp;nbsp;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&amp;nbsp;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&amp;nbsp;4&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&amp;nbsp;5&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;&amp;nbsp;6&lt;/td&gt;        
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　０が後手のストア、７が先手のストア、１〜６で先手のポケット、８〜１３で後手のポケットを示します。&lt;/p&gt;

&lt;h3 id=&quot;詰めマンカラ詰めカラハ&quot;&gt;詰めマンカラ（詰めカラハ）&lt;/h3&gt;
&lt;h4 id=&quot;問題１&quot;&gt;問題１&lt;/h4&gt;
&lt;p&gt;　まずは簡単な問題から。&lt;br /&gt;
　下の図で先手（下側）は何番のポケットを選ぶのが最善でしょうか？&lt;/p&gt;

&lt;p&gt;&lt;span&gt;※クリックで拡大&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose07.png&quot;&gt;&lt;img src=&quot;/images/ai_lose07.png&quot; alt=&quot;詰み07&quot; width=&quot;480&quot; title=&quot;詰み07&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　マンカラに慣れている人だと&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;の豆は動かさずに済ませられるならと思い、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;がいいんじゃないかと見当が付くのではないでしょうか？順に見ていきます。&lt;/p&gt;
&lt;h5 id=&quot;1を選んでみると&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;を選んでみると&lt;/h5&gt;
&lt;p&gt;　ＡＩは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12&lt;/code&gt;と進めて以下の局面になります。&lt;/p&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_001.png&quot;&gt;&lt;img src=&quot;/images/ai_001.png&quot; alt=&quot;詰めマンカラ&quot; width=&quot;480&quot; title=&quot;詰めマンカラ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　こうなると次に先手（下側）は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選んでも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んでも、いずれ豆を溜め込んでいる&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;のポケットを選ばざるを得なくなり、勝負が紛れます。というより逆転して後手が有利になります。この後、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選べばＡＩは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;11&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んでもＡＩは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;11&lt;/code&gt;（横取り２つ）で形勢逆転です。&lt;/p&gt;

&lt;h5 id=&quot;2を選んでみると&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選んでみると&lt;/h5&gt;
&lt;p&gt;　ＡＩは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12&lt;/code&gt;-&amp;gt;横取り（２つ）となって以下の局面になります。&lt;/p&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_002.png&quot;&gt;&lt;img src=&quot;/images/ai_002.png&quot; alt=&quot;詰めマンカラ&quot; width=&quot;480&quot; title=&quot;詰めマンカラ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　この場合も次に先手（下側）は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んでも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6&lt;/code&gt;を選んでも、パスは出来ないので豆を溜め込んでいる&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;のポケットを選ばざるを得なくなり後手が有利になります。&lt;/p&gt;

&lt;h5 id=&quot;3を選んでみると&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んでみると&lt;/h5&gt;
&lt;p&gt;　ＡＩは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12&lt;/code&gt;-&amp;gt;横取り（２つ）となって以下の局面になります。&lt;/p&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_003.png&quot;&gt;&lt;img src=&quot;/images/ai_003.png&quot; alt=&quot;詰めマンカラ&quot; width=&quot;480&quot; title=&quot;詰めマンカラ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　こうなれば次に先手（下側）が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選べば、相手の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;11&lt;/code&gt;のポケットの豆を横取りしてゲーム終了。先手の勝ちになります。&lt;br /&gt;
　先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んだ後、もしＡＩが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;を選ばずに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;11&lt;/code&gt;を選んだとしても、先手は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;や&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;のポケットを選ばずに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;〜&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;のポケットを選ぶだけで後手は自陣の豆が無くなっていきゲーム終了、先手の勝ちになります。&lt;br /&gt;
　念のため確認すると&lt;br /&gt;
　ＡＩが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;でなく&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;11&lt;/code&gt;を選んだ場合&lt;/p&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_004.png&quot;&gt;&lt;img src=&quot;/images/ai_004.png&quot; alt=&quot;詰めマンカラ&quot; width=&quot;480&quot; title=&quot;詰めマンカラ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;　先手は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;を選んでも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選んでも後手はピッタリ（連続して着手出来る）が仇となり、自陣の豆が無くなります。&lt;br /&gt;
　ＡＩが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;でなく&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12&lt;/code&gt;を選んだ場合&lt;/p&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_005.png&quot;&gt;&lt;img src=&quot;/images/ai_005.png&quot; alt=&quot;詰めマンカラ&quot; width=&quot;480&quot; title=&quot;詰めマンカラ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;　先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選べば&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;11&lt;/code&gt;の豆を横取りして、次にＡＩは自陣の豆が無くなります。&lt;br /&gt;
　ということで&lt;strong&gt;問題１の正解は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;です&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&quot;長手数問題&quot;&gt;長手数問題&lt;/h3&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose01.png&quot;&gt;&lt;img src=&quot;/images/ai_lose01.png&quot; alt=&quot;詰めマンカラ01&quot; width=&quot;480&quot; title=&quot;詰めマンカラ01&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　上の画面から先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;と進むと以下の局面になります。&lt;/p&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose02.png&quot;&gt;&lt;img src=&quot;/images/ai_lose02.png&quot; alt=&quot;詰めマンカラ02&quot; width=&quot;480&quot; title=&quot;詰めマンカラ02&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　この段階でＡＩの形勢Emojiが:tired_face:になりました。ＡＩは負けを覚悟したようです。負けを覚悟しながらもＡＩは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;を選びました。&lt;br /&gt;
　&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12&lt;/code&gt;と進んだ局面が以下です。&lt;/p&gt;

&lt;h4 id=&quot;問題２&quot;&gt;問題２&lt;/h4&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose03.png&quot;&gt;&lt;img src=&quot;/images/ai_lose03.png&quot; alt=&quot;詰めマンカラ03&quot; width=&quot;480&quot; title=&quot;詰めマンカラ03&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　この局面で何番のポケットが先手の最善手でしょう？&lt;/p&gt;

&lt;h5 id=&quot;1を選んでみると-1&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;を選んでみると&lt;/h5&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_win01.png&quot;&gt;&lt;img src=&quot;/images/ai_win01.png&quot; alt=&quot;ＡＩ勝ち01&quot; width=&quot;480&quot; title=&quot;ＡＩ勝ち01&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　上図のようになりＡＩの形勢Emojiが:frowning:に変わりました。これは詰みを逃したことを意味します。&lt;br /&gt;
　&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;のポケットが５個になり、次にピッタリを狙って一見得しそうですが、ＡＩが次に
　&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10&lt;/code&gt;と進めて以下の局面になって、ピッタリが防がれてしまいます。&lt;/p&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_win02.png&quot;&gt;&lt;img src=&quot;/images/ai_win02.png&quot; alt=&quot;ＡＩ勝ち02&quot; width=&quot;480&quot; title=&quot;ＡＩ勝ち02&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　この後はどう変化しても&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;のポケットに溜め込んでいる豆を吐き出すことになり、逆転してＡＩが有利になります。&lt;/p&gt;

&lt;h5 id=&quot;2を選んでみると-1&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選んでみると&lt;/h5&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose04.png&quot;&gt;&lt;img src=&quot;/images/ai_lose04.png&quot; alt=&quot;詰み04&quot; width=&quot;480&quot; title=&quot;詰み04&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　上図のようになりＡＩの形勢Emojiも:tired_face:のままです。ＡＩが次に
　&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10&lt;/code&gt;と進めて以下の局面になりますが、&lt;/p&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose07.png&quot;&gt;&lt;img src=&quot;/images/ai_lose07.png&quot; alt=&quot;詰み07&quot; width=&quot;480&quot; title=&quot;詰み07&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　この後は先手（下側）が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;のポケットを選べば、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;の豆は取られてしまいますが、先手が勝ちます。&lt;br /&gt;
　気付いた人がいるかも知れませんが、この局面は&lt;strong&gt;問題１&lt;/strong&gt;の局面と同じです。&lt;/p&gt;

&lt;h5 id=&quot;3を選んでみると-1&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んでみると&lt;/h5&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose05.png&quot;&gt;&lt;img src=&quot;/images/ai_lose05.png&quot; alt=&quot;詰み05&quot; width=&quot;480&quot; title=&quot;詰み05&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　上図のようになりＡＩの形勢Emojiも:tired_face:のままです。ＡＩが次に
　&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10&lt;/code&gt;と進めて以下の局面になりますが、&lt;/p&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose06.png&quot;&gt;&lt;img src=&quot;/images/ai_lose06.png&quot; alt=&quot;詰み06&quot; width=&quot;480&quot; title=&quot;詰み06&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　先手（下側）は今度は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;のポケットを選んで&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;11&lt;/code&gt;の豆を横取り、&lt;br /&gt;
　後手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;-&amp;gt;ピッタリ-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12&lt;/code&gt;で以下の画面。&lt;/p&gt;
&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose08.png&quot;&gt;&lt;img src=&quot;/images/ai_lose08.png&quot; alt=&quot;詰み08&quot; width=&quot;480&quot; title=&quot;詰み08&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　この局面を新たな３手詰問題としてもいいかも知れません。相手陣に豆は一つしか残っていないのですが、間違えると勝負が紛れます。先手はどこを選んでも相手陣に豆が渡ってしまう状態になっています。こういう時、自分に勝ちがあることに気づかず着手する人が結構多いのでは無いでしょうか？また、少し慣れた人だと、「&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;を選べば相手の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;の豆を横取り出来るぞ」なんて読んでしまう人がいるかも知れません。&lt;br /&gt;
　でも正解は相手陣に無駄に豆を供給しない手、一番豆の少ない&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;が好手です。&lt;/p&gt;

&lt;div style=&quot;width:480px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/ai_lose09.png&quot;&gt;&lt;img src=&quot;/images/ai_lose09.png&quot; alt=&quot;詰み09&quot; width=&quot;480&quot; title=&quot;詰み09&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　こうなると先手の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;の９個の豆は横取りされてしまうのですが、先手には&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;に一個残っている（一手パスするような手が残っている）のでＡＩが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8&lt;/code&gt;を選んでも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt;を選んでも自陣に豆が無くなり先手の勝ちになります。&lt;br /&gt;
　ということで&lt;strong&gt;問題２の正解は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;です&lt;/strong&gt;。&lt;br /&gt;
　正解が二つあるということで詰将棋で言えば余詰めがあるようなものなので、詰マンカラの例としては良くないのかも知れません。&lt;/p&gt;

&lt;p&gt;　ＡＩは&lt;strong&gt;問題２&lt;/strong&gt;の局面の前から既に&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;アプリ&lt;/a&gt;の形勢Emojiが:tired_face:に変わっていて、詰みを読み切っていたわけです。人間が読み切るのは大変かもしれませんが、形勢Emojiが:tired_face:に変わったら詰み（勝ち）があるということなので、マンカラを詰将棋を解く気持ちで楽しんでみるのも面白いと思います。&lt;/p&gt;

&lt;h3 id=&quot;ボードゲームは必勝法追求より楽しんだ者勝ち&quot;&gt;ボードゲームは必勝法追求より楽しんだ者勝ち&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;アプリ&lt;/a&gt;をリリースしてからは、テストも兼ねてgoogle play内のマンカラアプリをいろいろダウンロードして試しに遊んでみました。必ずしもダウンロード数が多いアプリが強いわけではなく、強さとユーザーの評価とはあまり関係ないようです。宣伝にどれだけ金かけているかの違いだと思いますが、強いソフトが商売として成功するとは限らない点は将棋アプリについても言えることでしょう。&lt;br /&gt;
　ただ、強いアプリはどれもだいたい似たような指し手になるようで、何度も対戦していると勝ちパターンも分かってきて楽しめなくなります。将棋ほど変化が多くないので仕方がないのかも知れません。そこで&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;「マンカラ ナッツ」&lt;/a&gt;では、最強の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい&lt;/code&gt;モード以外の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;強い&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;弱い&lt;/code&gt;モードでは初手を評価値とは関係なく乱数で選ぶようにしています&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;。初手を乱数に変えるだけで全てのパターンに対応するのは難しく、勝ったり負けたりゲームを楽しめると思います。自分は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい&lt;/code&gt;モードでは先手の時の勝ちパターンが分かってきたのですが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;強い&lt;/code&gt;モードでは先手でも勝てない時が多いのでいつも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;強い&lt;/code&gt;モードで遊んでます。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;詰将棋専用の評価関数と書きましたが、実際にそういう専用の評価関数が使われているソフトが存在するかは知りません。ただ全局面を完全に読み切れるのであれば本将棋でもこういう単純な評価関数で十分なわけです。将棋の場合完全には読み切れないので、形勢判断のためにいろいろな特徴量（駒得、玉の固さ等を数値化）を使って評価する必要が出てくるのですが、その形勢判断の精度が高い評価関数であれば、詰将棋用とか形勢判断用とか分けなくて済みます。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;マンカラで形勢判断するとしたら、自陣にある種子（豆）の数とか、横取りされ易さ（対称の位置にある相手のポケットが空かどうか）とかを数値化するのでしょうか？よく分かりません。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;全てのモードで評価値が同じ場合は乱数で着手を選ぶようになっていますが、初手に関しては評価値が低い手を敢えて選ばせているという意味です。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/software/2020-11-21/mancala_evaluate01</link>
        <guid isPermaLink="true">https://happyclam.github.io/software/2020-11-21/mancala_evaluate01</guid>
        
        <category>dart</category>
        
        <category>android</category>
        
        <category>flutter</category>
        
        <category>c++</category>
        
        <category>mancala</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>C++でFlutterアプリのライブラリ作成</title>
        <description>&lt;h3 id=&quot;その簡単さに驚く&quot;&gt;その簡単さに驚く&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;/software/2020-09-19/js_dart_cpp&quot;&gt;前回の記事&lt;/a&gt;で作ったC++製のプログラムをアプリで利用しない手は無いと思いちょっと調べてみたら非常に簡単に作れそうなのでやってみました。自分の場合は取り敢えずandroid版しか考えていないので、&lt;a href=&quot;https://flutter.dev/docs/development/platform-integration/c-interop&quot;&gt;公式サイト&lt;/a&gt;に書かれている僅かな手順を踏めば、ライブラリ（Plugin）とそのテストをするためのExampleプロジェクトが出来上がります。&lt;/p&gt;

&lt;h3 id=&quot;情報が少なめ&quot;&gt;情報が少なめ&lt;/h3&gt;
&lt;p&gt;　Flutter,Pluginで検索するとPluginを公開する前提で書かれている記事が多くて、自分のアプリ用のライブラリとして使うケースについては情報が少ないような気がします。Java（あるいはKotlin）やSwiftを経由してC++のライブラリを使う方法なんかもあるようですが、C++だけで済ませたかった自分には参考になる記事は少なかったです。&lt;br /&gt;
　&lt;a href=&quot;https://flutter.dev/docs/development/platform-integration/c-interop&quot;&gt;前述の公式サイトの記事&lt;/a&gt;で&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart:ffi&lt;/code&gt;を使えばint型のデータだけなら簡単にやり取りできるのは分かったのですが、intだけじゃ大変だなと思っていたところ、&lt;a href=&quot;https://www.google.co.jp/search?sxsrf=ALeKk0278rFY7cQTrFc34ZLGoL92Ncc_3w%3A1601382825947&amp;amp;source=hp&amp;amp;ei=qSlzX7TPNsuNoASIrIagBw&amp;amp;q=Flutter%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%A7dart%3Affi%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B&amp;amp;oq=Flutter%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%A7dart%3Affi%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B&amp;amp;gs_lcp=CgZwc3ktYWIQAzoICAAQsQMQgwE6BwgAELEDEAQ6BggAEAQQAzoECAAQBDoFCAAQsQM6AggAOggIABAFEAQQHjoGCAAQBRAeOgUIABDNAlCBF1j5c2D9dGgGcAB4AIABdIgB5x2SAQUyMy4xNpgBAKABAaoBB2d3cy13aXo&amp;amp;sclient=psy-ab&amp;amp;ved=0ahUKEwj0x_Lzr47sAhXLBogKHQiWAXQQ4dUDCAw&amp;amp;uact=5&quot;&gt;「Flutterプラグインでdart:ffiを使ってみる」というPDFファイル&lt;/a&gt;を読んでポインタ経由なら他のデータでもやり取り出来そうなことが分かって、やってみる気になりました。Dart:ffiだけで不足している機能は&lt;a href=&quot;https://pub.dev/packages/ffi&quot;&gt;ffiパッケージ&lt;/a&gt;として公開されているものを使います。&lt;/p&gt;

&lt;h3 id=&quot;ライブラリplugin用のプロジェクト作成&quot;&gt;ライブラリ（Plugin）用のプロジェクト作成&lt;/h3&gt;
&lt;p&gt;　iosでの利用も考えている人は違ってくると思います。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flutter create --org io.github.happyclam --template=plugin --platforms=android karah_think
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　プロジェクトを作成したら&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flutter build apk&lt;/code&gt;で一度ビルドした後、android/下のCMakeList.txtの編集&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# CMakeList.txt
cmake_minimum_required(VERSION 3.4.1)  # for example
set(CMAKE_CXX_FLAGS &quot;-O2 -std=c++11 -Wall&quot;)
add_library( karah_think

             # Sets the library as a shared library.
             SHARED

             # Provides a relative path to your source file(s).
             ../android/Classes/karah_think.cpp )

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　android/下にClassesという名のディレクトリを作成（何でもいい）して、C++のソースは全てそこに入れました。/android/Classes/karah_think.cppがアプリから呼び出される関数（エクスポート関数）が書かれているファイルです。&lt;a href=&quot;/software/2020-09-19/js_dart_cpp&quot;&gt;前回の記事&lt;/a&gt;でも書いたコンパイルオプションもこのファイル（CMakeList.txt）で定義します。&lt;br /&gt;
　これだけでライブラリ開発環境が出来て、karah_thinkプロジェクト内に自動作成されたExampleプロジェクトをAndroid Studioで読み込めばライブラリの開発＆テストが出来ます。Exampleプロジェクトをビルドすればライブラリ（libkarah_think.so）もビルドされます。&lt;br /&gt;
　ここまでは上記の公式サイトに書かれている内容です。&lt;/p&gt;

&lt;h3 id=&quot;作ったライブラリpluginをアプリのプロジェクトで使う&quot;&gt;作ったライブラリ（Plugin）をアプリのプロジェクトで使う&lt;/h3&gt;
&lt;p&gt;　ライブラリの中身はマンカラで使う要素１４個の固定長配列、手番（先手・後手）、読みの深さを渡して最善手を返して貰うラッパー関数を書くだけなのですぐに実装出来ました。でも、この出来上がったライブラリをどうやって元々存在するマンカラアプリのプロジェクトから使うのか分からなかったのですが、Flutterで公開されているパッケージを使う時と同じように、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt;に依存関係を記述するだけでした。&lt;br /&gt;
　マンカラアプリのプロジェクトの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pubspec.yaml&lt;/code&gt;内の依存関係に、ライブラリのプロジェクトが存在するローカルのPathを追記します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#pubspec.yaml
dependencies:
  flutter:
    sdk: flutter
  karah_think:
    path: &quot;../karah_think/&quot;
  ffi: ^0.1.3

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　マンカラアプリプロジェクト（mancala）とC++ライプラリプロジェクト（karah_think）とライブラリ動作確認用プロジェクト（example）の関係は以下のようになっています。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── mancala
│   ├── pubspec.yaml
├── karah_think
│   ├── example

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　ライブラリを使う側のマンカラアプリプロジェクトの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib/main.dart&lt;/code&gt;の宣言部分はこんな感じです。&lt;br /&gt;
　引数は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;評価値と指し手を受け取るための配列&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;マンカラの盤面情報を渡す配列&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;手番（先手・後手）&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;読みの深さ&lt;/code&gt;になってます。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#mancala/lib/main.dart
import 'dart:typed_data';
import 'dart:ffi'; // For FFI
import 'dart:io'; // For Platform.isX
import 'package:ffi/ffi.dart';
final DynamicLibrary karahThinkLib = Platform.isAndroid
    ? DynamicLibrary.open(&quot;libkarah_think.so&quot;)
    : DynamicLibrary.process();

final int Function(Pointer&amp;lt;Int32&amp;gt; pResult, Pointer&amp;lt;Int32&amp;gt; board, int turn, int depth) karahThink =
karahThinkLib
    .lookup&amp;lt;NativeFunction&amp;lt;Int32 Function(Pointer&amp;lt;Int32&amp;gt;, Pointer&amp;lt;Int32&amp;gt;, Int32, Int32)&amp;gt;&amp;gt;(&quot;karah_think&quot;)
    .asFunction();

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　ライブラリ（libkarah_think.so）のエクスポート関数を呼び出す部分&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#mancala/lib/main.dart
  List _cppThink(List board, int turn, int depth){
    final pBoard32 = allocate&amp;lt;Int32&amp;gt;(count: board.length);
    Pointer&amp;lt;Int32&amp;gt; pResult32 = allocate&amp;lt;Int32&amp;gt;(count: 2);
    for (var i = 0; i &amp;lt; board.length; i++){
      pBoard32[i] = board[i];
    }
    int ret = karahThink(pResult32, pBoard32, turn, depth);
    Int32List list = pResult32.asTypedList(2);
    List result = List.from(list);
    free(pBoard32);
    free(pResult32);
    return result;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　ライブラリのエクスポート関数&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* karah_think/android/Classes/karah_think.cpp */
#include &amp;lt;stdint.h&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;array&amp;gt;
#include &amp;lt;map&amp;gt;
#include &quot;./const.cpp&quot;
#include &quot;./player.cpp&quot;

extern &quot;C&quot; __attribute__((visibility(&quot;default&quot;))) __attribute__((used))
int32_t karah_think(int32_t* pResult, int32_t* pBoard, int32_t turn, int32_t depth) {
  int32_t ret = 0;
  std::array&amp;lt;int, DENTS&amp;gt; board{0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  std::array&amp;lt;int, 2&amp;gt; result{0, 0};
  for(int i = 0; i &amp;lt; DENTS; i++){
    board[i] = pBoard[i];
  }
  Player *pFirst = new Player(FIRST);
  Player *pSecond = new Player(SECOND);
  if (turn == FIRST){
    result = pFirst-&amp;gt;think(board, pSecond, depth, FIRST_WIN);
  } else {
    result = pSecond-&amp;gt;think(board, pFirst, depth, SECOND_WIN);
  }
  ret = result[0];
  pResult[0] = result[0];
  pResult[1] = result[1];
  delete pFirst;
  delete pSecond;
  return ret;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　C++側はSTLを使っているので型に合わせた変数に代入し直して利用します。&lt;/p&gt;

&lt;h3 id=&quot;効果は歴然&quot;&gt;効果は歴然&lt;/h3&gt;
&lt;p&gt;　今まではマンカラアプリのAIのレベルを「やばい」にすると一手毎に待たされていたのですが、C++製ライブラリを使ったものは他のAIレベルと同じぐらいのレスポンスになりました。&lt;br /&gt;
　Windows用のライブラリと違って、様々なCPUに合わせたAndroid端末毎のDLLが簡単なGUI操作（中で活躍してるのはgradleですが）でビルド出来るのはすごいです。&lt;br /&gt;
　将棋関連アプリも早くこの形でリリースしたいところですが、マンカラのように一つの固定長配列を渡すだけでは済まないので、いろいろ試してみないと分からないことが多く道のりは遠いです。&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 01 Oct 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/software/2020-10-01/flutter_plugin</link>
        <guid isPermaLink="true">https://happyclam.github.io/software/2020-10-01/flutter_plugin</guid>
        
        <category>dart</category>
        
        <category>android</category>
        
        <category>flutter</category>
        
        <category>c++</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Dartは遅いけど、FlutterでGUIは有り</title>
        <description>&lt;h3 id=&quot;dartに絶望flutterでguiは有り&quot;&gt;Dartに絶望FlutterでGUIは有り&lt;/h3&gt;
&lt;p&gt;　Qiitaのどなたかの記事でDartはJavaScriptより実行速度が倍程速いと書かれているのを見かけて、期待しながら今リリースしているCoffeeScript（JavaScript）製の&lt;a href=&quot;https://play.google.com/store/apps/details?id=shogi55.io.github.happyclam&quot;&gt;５五将棋アプリ&lt;/a&gt;のGUI以外の部分をDartで書き直して比較したのですが、テストの結果からDartの方が遅いことが分かりました。Flutter(Dart)で&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;マンカラアプリ&lt;/a&gt;を作ってみてGUIの作り易さに感動した&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;だけに非常に失望しました。&lt;br /&gt;
　&lt;a href=&quot;https://play.google.com/store/apps/details?id=shogi55.io.github.happyclam&quot;&gt;今のアプリ&lt;/a&gt;よりも実行速度が遅いのならFlutterで将棋関連のアプリを作り直す意味がないので、どうしようかと思い、&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;以前の記事&lt;/a&gt;で書いたマンカラアプリなら行数も少ないのでとりあえずこれを題材にTypeScriptとC++で書き直して比較してみました。&lt;/p&gt;

&lt;h3 id=&quot;比較の元となるdartの実行結果&quot;&gt;比較の元となるDartの実行結果&lt;/h3&gt;
&lt;p&gt;　６×２列のマンカラカラハの先読みプログラムの実行結果です。何をやっているかは&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;以前の記事&lt;/a&gt;を参照してください。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ dart mancala.dart
[0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2]
=== result = 1, 5, i = 1
=== result = 0, 5, i = 2
=== result = 3, 5, i = 3
=== result = 4, 5, i = 4
=== result = 5, 5, i = 5
=== result = 4, 5, i = 6
=== result = 5, 5, i = 7
=== result = 4, 5, i = 8
=== result = 4, 5, i = 9
=== result = 4, 5, i = 10
=== result = 3, 5, i = 11
=== result = 5, 5, i = 12
=== result = 4, 5, i = 13
=== result = 5, 5, i = 14
=== result = 6, 5, i = 15
=== result = 2, 6, i = 16
=== result = 3, 6, i = 17
=== result = 999, 5, i = 18
4040941
[999, 5]

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　１８手で先手必勝を読み切るまでに4040秒（１時間強）&lt;/p&gt;

&lt;h3 id=&quot;まずはtypescript&quot;&gt;まずはTypeScript&lt;/h3&gt;
&lt;p&gt;　好きなCoffeeScriptはマイナーになってしまったので、Dartの存在を知る前から今の将棋関連アプリをいずれTypeScriptに書き換えるべきかなと思っていたのでまずはこれで試しました。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ts-node mancala.ts
[ 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2 ]
result = [ 1, 5, [length]: 2 ], i = 1
result = [ 0, 5, [length]: 2 ], i = 2
result = [ 3, 5, [length]: 2 ], i = 3
result = [ 4, 5, [length]: 2 ], i = 4
result = [ 5, 5, [length]: 2 ], i = 5
result = [ 4, 5, [length]: 2 ], i = 6
result = [ 5, 5, [length]: 2 ], i = 7
result = [ 4, 5, [length]: 2 ], i = 8
result = [ 4, 5, [length]: 2 ], i = 9
result = [ 4, 5, [length]: 2 ], i = 10
result = [ 3, 5, [length]: 2 ], i = 11
result = [ 5, 5, [length]: 2 ], i = 12
result = [ 4, 5, [length]: 2 ], i = 13
result = [ 5, 5, [length]: 2 ], i = 14
result = [ 6, 5, [length]: 2 ], i = 15
result = [ 2, 6, [length]: 2 ], i = 16
result = [ 3, 6, [length]: 2 ], i = 17
result = [ 999, 5, [length]: 2 ], i = 18
ms = 2862324
[ 999, 5 ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　同じ結果を得るまでに2862秒（１時間弱）で、やはりDartよりJSの方が速いようです。将棋の場合これ以上に明確な差がありました。&lt;/p&gt;

&lt;h3 id=&quot;cはやはり最強&quot;&gt;C++はやはり最強&lt;/h3&gt;
&lt;p&gt;　苦労してC++で将棋関連アプリを書き直しても、そのままではスマホアプリに出来ないので今までは避けていました。でもFlutterでGUI部分を作って思考部分だけC++で作ればいいんじゃないかなんて考えて試してみました&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;br /&gt;
　C言語を使うのが久しぶりでよく調べずに一度間違った記事をアップしてしまったのですが、以下がC++の結果です&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ g++ mancala.cpp -O2 -o mancala.out
$ ./mancala.out
0,2,2,2,2,2,2,0,2,2,2,2,2,2,
=== result = 1, 5, i = 1
=== result = 0, 5, i = 2
=== result = 3, 5, i = 3
=== result = 4, 5, i = 4
=== result = 5, 5, i = 5
=== result = 4, 5, i = 6
=== result = 5, 5, i = 7
=== result = 4, 5, i = 8
=== result = 4, 5, i = 9
=== result = 4, 5, i = 10
=== result = 3, 5, i = 11
=== result = 5, 5, i = 12
=== result = 4, 5, i = 13
=== result = 5, 5, i = 14
=== result = 6, 5, i = 15
=== result = 2, 6, i = 16
=== result = 3, 6, i = 17
=== result = 999, 5, i = 18
700673.273000[ms]
999, 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　結果は、700秒（約１１分）!!やはり最強でした。&lt;/p&gt;

&lt;p&gt;　プログラムを他の言語に移植すると言っても同じオブジェクト指向言語であればほとんどコードは一対一に書き換え可能で、写経に近いものがあります&lt;sup id=&quot;fnref:4&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;。元々のDartのプログラムにはまだまだ改良の余地があると思いますが、拙いコードであってもバグがあったとしても、今回比較した３つのプログラムは行数も少なく同じ処理をしていますので、拙いコードもバグも同じまま、実行時間だけを比較していると言えると思います&lt;sup id=&quot;fnref:5&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;。実行結果も同じです。&lt;/p&gt;

&lt;h3 id=&quot;マンカラの必勝法は&quot;&gt;マンカラの必勝法は？&lt;/h3&gt;
&lt;p&gt;　今回、マンカラの先読みプログラムをC++に移植したのは、以前の&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;マンカラの記事&lt;/a&gt;、&lt;a href=&quot;/software/2020-08-09/mancala_easy&quot;&gt;続編&lt;/a&gt;の課題である、マンカラカラハ（６×２列で種子４つ）の必勝法を見つける目論見も兼ねていたのですが、C++版で実行時間が短縮されたと言っても、この程度では必勝法を見つけることが出来るかどうかは分かりません。１時間掛かった作業が１０分で可能になったと言っても、もし読み切るのに１年以上掛かる作業だとしたら、やはり数ヶ月以上掛かることには変わりませんから。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;アニメーションなんてほとんど経験ないのにネットでググりながら進めたら簡単に作れました。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;昔、GUIはVisualBasicで作って内部処理はVisualC++で作る（DLL）なんて仕事をよくしていました。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;コンパイルオプション(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-O&lt;/code&gt;、または&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-O2&lt;/code&gt;)を付加することで末尾最適化してくれるそうです。そう言えば昔はスタックサイズやらいろいろコンパイルオプションを付けなければ上手くいかなかった記憶があります。自分がC言語から遠ざかっている間にコンパイラも進化しているようです。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;プログラムの行数もほぼ同じ、コードもほぼ一対一で書式だけが違う感じで、C++だけクラス変数の初期化部分が少し違う程度です。 &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;実際に微妙なバグがあったので出力内容は現在では違う内容になってます。&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;アプリ&lt;/a&gt;の方は修正済みです。 &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 19 Sep 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/software/2020-09-19/js_dart_cpp</link>
        <guid isPermaLink="true">https://happyclam.github.io/software/2020-09-19/js_dart_cpp</guid>
        
        <category>dart</category>
        
        <category>android</category>
        
        <category>flutter</category>
        
        <category>typescript</category>
        
        <category>c++</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>マンカラアプリについて</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://taimienphi.vn/download-mancala-nuts-90337&quot;&gt;&lt;img src=&quot;/images/tmp2.png&quot; alt=&quot;マンカラアプリ&quot; title=&quot;マンカラ ナッツ&quot; width=&quot;155&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;&lt;img src=&quot;/images/ja_badge_web_generic.png&quot; alt=&quot;マンカラアプリ&quot; title=&quot;マンカラ ナッツ&quot; width=&quot;155&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.amazon.co.jp/happyclam-マンカラ-ナッツ/dp/B08D8QVVQY/ref=sr_1_10?__mk_ja_JP=カタカナ&amp;amp;dchild=1&amp;amp;keywords=マンカラ&amp;amp;qid=1595382601&amp;amp;s=mobile-apps&amp;amp;sr=1-10&quot;&gt;&lt;img src=&quot;/images/amazon-appstore-badge-jp-white.png&quot; alt=&quot;マンカラアプリ&quot; title=&quot;マンカラ ナッツ&quot; width=&quot;155&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;https://taimienphi.vn&quot; title=&quot;download&quot;&gt;taimienphi.vn&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;マンカラ-ナッツについて&quot;&gt;「マンカラ ナッツ」について&lt;/h3&gt;
&lt;p&gt;　対人戦の途中でＡＩ対戦に切り替えたり、ＡＩ対戦の途中で対人戦に切り替えたりして、マンカラの特定の局面での最善手の研究にも使えるように配慮したマンカラアプリです。&lt;br /&gt;
　Version1.1.6で豆の数を３個〜７個から選べるようにしました。また、対戦成績を先手番・後手番別に保存するようにしました。豆の数によって先手有利・後手有利の違いがあります。&lt;br /&gt;
　勝ちパターンを覚えてしまうとゲームを楽しめないので、Version1.1.9から&lt;strong&gt;ランダム配置機能&lt;/strong&gt;を追加しました。&lt;/p&gt;

&lt;h3 id=&quot;ルール&quot;&gt;ルール&lt;/h3&gt;
&lt;p&gt;　数あるマンカラのルールの中で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;カラハ（Karah）&lt;/code&gt;と呼ばれるルールを採用しています。&lt;br /&gt;
　上下２列に並んだ６つのポケットに豆が入っていて、上がAI、下があなたです。丸い６つのポケットからどれかを選んで豆を取り出し、反時計回りに豆を一つずつポケットに撒いていきます。どちらかの６つのポケットが全て空になったらゲーム終了し、右側の四角い自分の貯蔵所に残った豆の数で勝ち負けを判定します。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;相手の貯蔵所には豆を撒きません。&lt;/li&gt;
  &lt;li&gt;豆を撒き終わったポケットが自分の貯蔵所の場合、もう一度ポケットを選んで豆を撒くことが出来ます（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ピッタリ&lt;/code&gt;）。&lt;/li&gt;
  &lt;li&gt;自分の空のポケットで豆を撒き終わった時にその対称に位置する相手のポケットに豆が存在する場合、その豆を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;横取り&lt;/code&gt;（Capture）して自分の貯蔵所に加えることが出来ます。&lt;/li&gt;
  &lt;li&gt;ゲーム終了時にポケットに残った豆は全て自分の貯蔵所に加えます。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　同じ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;カラハ（Karah）&lt;/code&gt;と称するルールでも細かな違いがあるケースが存在しますが、&lt;a href=&quot;https://www.nintendo.co.jp/switch/as7ta/&quot;&gt;Nintendo Switchの世界のアソビ大全51&lt;/a&gt;に収録されているマンカラと同じルールにしています。&lt;/p&gt;

&lt;h3 id=&quot;機能&quot;&gt;機能&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;ＡＩ対戦（レベルは３段階）&lt;/li&gt;
  &lt;li&gt;対人対戦&lt;/li&gt;
  &lt;li&gt;待った機能&lt;/li&gt;
  &lt;li&gt;豆選択（コーヒー、ピスタチオ、アーモンド）機能&lt;/li&gt;
  &lt;li&gt;豆の数選択機能（３個〜７個）&lt;/li&gt;
  &lt;li&gt;先手後手別、対戦成績保存機能（ゲーム途中で設定を変更しり、「待った」した場合は対戦成績には記録されません）&lt;/li&gt;
  &lt;li&gt;多言語対応、日&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ja&lt;/code&gt;, 英&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en&lt;/code&gt;, 越&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;AI対戦時の形勢判断Emoji表示機能&lt;/li&gt;
  &lt;li&gt;ランダム配置機能&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ａｉ対戦&quot;&gt;ＡＩ対戦&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/mancala_screen1.png&quot;&gt;&lt;img src=&quot;/images/mancala_screen1.png&quot; alt=&quot;ＡＩ対戦画面&quot; width=&quot;320&quot; title=&quot;ＡＩ対戦画面&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新規ゲーム(New Game)&lt;/code&gt;ボタンで新規対局開始されます。&lt;/li&gt;
  &lt;li&gt;ＡＩの対戦途中に強さ設定を変更すると、そのゲーム結果は対戦成績に記録されません。&lt;/li&gt;
  &lt;li&gt;ＡＩ対戦の場合は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;戻す(Undo)&lt;/code&gt;ボタンで一つ前の人間の手番まで戻ります。ＡＩが連続で複数回着手していた場合も複数手分のＡＩの指し手を飛ばして、一つ前の人間の手番の局面に戻ります。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;戻す(Undo)&lt;/code&gt;ボタンを使用すると対戦成績には記録されません。&lt;/li&gt;
  &lt;li&gt;AIの静的評価関数は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;先手の貯蔵所に溜まった豆の数 - 後手の貯蔵所に溜まった豆の数&lt;/code&gt;で、MIN-MAX法（+ αβ法）を使って先読みを行い指し手を決めます。
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;弱い(Easy)&lt;/code&gt; = ３手読み&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;強い(Hard)&lt;/code&gt; = ８手読み&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい(Expert)&lt;/code&gt; = １１手読み&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;形勢emoji表示&quot;&gt;形勢Emoji表示&lt;/h4&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/mancala_screen5.png&quot;&gt;&lt;img src=&quot;/images/mancala_screen5.png&quot; alt=&quot;ＡＩ形勢Emoji&quot; width=&quot;320&quot; title=&quot;ＡＩ形勢Emoji&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AI対戦(One Player)&lt;/code&gt;時に画面右上に形勢判断用のEmojiを表示します。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Emoji&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;文字コード&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;意味&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:laughing:&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;U+1F923&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ＡＩが勝ちを確信。逆転は難しいでしょう。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:grin:&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;U+1F601&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ＡＩが優勢を意識。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:neutral_face:&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;U+1F610&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ＡＩは互角と判断。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:frowning:&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;U+1F641&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ＡＩは劣勢を意識。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:tired_face:&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;U+1F62B&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ＡＩが負けを覚悟。但し、勝負はあなたの着手しだいです&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;※このページのEmojiは実際のAndroid端末で表示されるEmojiとは若干表示が異なるケースがあります。&lt;/p&gt;

&lt;h3 id=&quot;対人対戦&quot;&gt;対人対戦&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/mancala_screen2.png&quot;&gt;&lt;img src=&quot;/images/mancala_screen2.png&quot; alt=&quot;対人対戦画面&quot; width=&quot;320&quot; title=&quot;対人対戦画面&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新規ゲーム(Play)&lt;/code&gt;ボタンでゲーム開始、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;中止(Stop)&lt;/code&gt;ボタンでゲームを中断します。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;先手&lt;/code&gt;が画面下側、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;後手&lt;/code&gt;が画面上側です。&lt;/li&gt;
  &lt;li&gt;ゲーム途中でＡＩ対戦に戻すことも出来ます。途中からＡＩ対戦に切り替えても、勝敗は対戦成績には記録されません。&lt;/li&gt;
  &lt;li&gt;対人対戦の場合は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;戻す(Undo)&lt;/code&gt;ボタンで一手ずつ前の局面に戻ります。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;設定画面&quot;&gt;設定画面&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/mancala_screen3.png&quot;&gt;&lt;img src=&quot;/images/mancala_screen3.png&quot; alt=&quot;設定画面&quot; width=&quot;320&quot; title=&quot;設定画面&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;ゲームに使用する豆は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;コーヒー(Coffee)&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ピスタチオ(Pistachio)&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;アーモンド(Almond)&lt;/code&gt;の３種類から選べます。&lt;/li&gt;
  &lt;li&gt;初期の豆の数は３個〜７個の５種類から選べます（Version1.1.6以降）。&lt;/li&gt;
  &lt;li&gt;ＡＩの強さレベルは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;弱い(Easy)&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;強い(Hard)&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい(Expert)&lt;/code&gt;の３種類から選べます。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AI対戦(One Player)&lt;/code&gt;を選ぶとＡＩ対戦、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;二人対戦(Two Players)&lt;/code&gt;を選ぶと対人戦が可能です。&lt;/li&gt;
  &lt;li&gt;ＡＩ対戦途中で設定内容を変更した場合そのＡＩ対戦の結果は対戦成績に保存されません。&lt;/li&gt;
  &lt;li&gt;同じパターンの指し手を避けるため、ＡＩのレベル&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;弱い(Easy)&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;強い(Hard)&lt;/code&gt;では、初手はランダムに選ぶようにしています。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい(Expert)&lt;/code&gt;はガチで指し手を決めます&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/li&gt;
  &lt;li&gt;全てのＡＩのレベルで、同じ評価値の場合はランダムに指し手を選択するようにしていますので、同じ局面で常に同じ指し手を選ぶとは限りません&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/li&gt;
  &lt;li&gt;ＡＩ対戦時に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;先手&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;後手&lt;/code&gt;かを選べます。この設定は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;二人対戦(Two Players)&lt;/code&gt;時には意味はありません。&lt;/li&gt;
  &lt;li&gt;対戦を重ねると同じパターンで決着し、ゲームを楽しめなくなるのを防ぐため&lt;strong&gt;ランダム配置機能&lt;/strong&gt;追加しました（Version1.1.9以降）。設定画面で「ランダム」を選ぶと豆の初期配置が先手・後手同じでランダムな配置になります&lt;sup id=&quot;fnref:4&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ゲーム成績画面&quot;&gt;ゲーム成績画面&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/images/mancala_screen4.png&quot;&gt;&lt;img src=&quot;/images/mancala_screen4.png&quot; alt=&quot;ＡＩ対戦成績画面&quot; width=&quot;320&quot; title=&quot;ＡＩ対戦成績画面&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;ＡＩ対戦の対戦成績を閲覧出来ます（Version1.1.6から、対戦成績を先手・後手別に保存するようにしました）。&lt;br /&gt;
※旧バージョンから新バージョンにバージョンアップすると、旧バージョンには先手番後手番の情報が無いので、全て先手番の成績として移行します。&lt;/li&gt;
  &lt;li&gt;豆の数（３〜７）別に対戦成績が記録されます。表の左上の数字はゲーム開始時に配置されている豆の数です。&lt;/li&gt;
  &lt;li&gt;ゲーム成績を初期化する場合は、ゲームアイコンを長押しし、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;アプリ情報&lt;/code&gt;-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ストレージとキャッシュ&lt;/code&gt;-&amp;gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ストレージを消去&lt;/code&gt;で初期化して下さい。全ての設定がゲームインストール時と同様に初期化されます。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;ＡＩのレベル毎の先読みの手数（３手、８手、１１手）以内に勝ちがある（将棋で言うと詰みがある）状態です。よく考えて着手してください。:tired_face:の絵文字が表示された後の着手でＡＩの表情が他のものに変わった場合、勝ち（詰み）を逃したことを意味します。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;一時期&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい(Expert)&lt;/code&gt;モードでも初手をランダムにしてリリースしていた時期がありましたが、マンカラの場合、初手に悪手を選ぶとその段階で回復不可能な程形勢を大きく損ねるようなので、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;やばい(Expert)&lt;/code&gt;の時だけは初手のランダム指し手を止めました。将棋やチェスなどと較べると初手から既に勝敗に大きく影響するようです。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;戻す(Undo)&lt;/code&gt;ボタンで数手前の局面に戻してからAI対戦を再開しても、前回と同じ局面になるとは限りませんのでご注意ください。ゲーム途中で設定を&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;二人対戦(Two Players)&lt;/code&gt;に変更して、気になる局面を再現してから&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AI対戦(One Player)&lt;/code&gt;に切り替えることは可能です。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;ランダムと言っても豆の数が０にはならないようにしています。また、豆の合計数は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;４&lt;/code&gt;を選んだ場合と同じ４×６×２＝４８個です。 &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/project/2020-08-10/mancalanuts</link>
        <guid isPermaLink="true">https://happyclam.github.io/project/2020-08-10/mancalanuts</guid>
        
        <category>flutter</category>
        
        <category>dart</category>
        
        <category>android</category>
        
        <category>mancala</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>マンカラの必勝手順の有無（続編）</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;&lt;img src=&quot;/images/ja_badge_web_generic.png&quot; alt=&quot;マンカラアプリ&quot; title=&quot;マンカラ ナッツ&quot; width=&quot;155&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.amazon.co.jp/happyclam-マンカラ-ナッツ/dp/B08D8QVVQY/ref=sr_1_10?__mk_ja_JP=カタカナ&amp;amp;dchild=1&amp;amp;keywords=マンカラ&amp;amp;qid=1595382601&amp;amp;s=mobile-apps&amp;amp;sr=1-10&quot;&gt;&lt;img src=&quot;/images/amazon-appstore-badge-jp-white.png&quot; alt=&quot;マンカラアプリ&quot; title=&quot;マンカラ ナッツ&quot; width=&quot;155&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;結構アクセスがあったので続編&quot;&gt;結構アクセスがあったので続編&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;前回の記事&lt;/a&gt;が意外に多くのアクセスがあった&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;ので続編を書いてみます。おそらく&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;前回の記事&lt;/a&gt;にアクセスした人はプログラムにはあまり関心はないけど、マンカラの攻略法・勝ち方・必勝手順を知りたくてアクセスした人が多いのだと思いますが、それを知るには&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;前回の記事&lt;/a&gt;の最後に追記したように非常に時間がかかるので、いつかまとめて最も遊ばれていると思われる６×２列のカラハに関してだけ別の記事で書こうと思ってます。時間かけて先読みした結果、結局５０手読みでは結論出なかったという可能性もあります。&lt;br /&gt;
　今回はマンカライージーに関して、前回同様必勝手順の有無についての実験結果を書いてみます。マンカライージーのルールについては&lt;a href=&quot;https://hugkum.sho.jp/96590&quot;&gt;ここ&lt;/a&gt;にベーシックとカラハと比較して書かれています。相手のストアには石を撒かない点と自分のストアに溜まった石の数で勝敗を決める点でカラハと同じです。カラハと違うのは相手の石を横取り（Capture）するルールが無いことです。&lt;/p&gt;

&lt;h3 id=&quot;実験結果３２列イージー&quot;&gt;実験結果（３×２列イージー）&lt;/h3&gt;
&lt;p&gt;　石の数を１〜５個にして、５０手先読みしたそれぞれの結果です。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;石の数&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;１&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;２&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;３&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;４&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;５&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;戻り値&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 3]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 1]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;読みの深さ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２５手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;結論&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;検証&quot;&gt;検証&lt;/h4&gt;
&lt;p&gt;　相変わらず石３個でも２０手以上かかるので、遷移を書いて検証するのは大変です。そこでさらに計算量が少ない２×２列で検証することにしました。&lt;/p&gt;

&lt;hr /&gt;

&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;br /&gt;(0)&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;br /&gt;(5)&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;br /&gt;(4)&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;br /&gt;(3)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;br /&gt;(1)&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;br /&gt;(2)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;※( )内の数字は配列（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;board = [0,2,2,0,2,2]&lt;/code&gt;）の添字です。添字の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;がストアになります。&lt;/p&gt;

&lt;h3 id=&quot;実験結果２２列イージー&quot;&gt;実験結果（２×２列イージー）&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;石の数&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;１&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;２&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;３&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;４&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;５&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;６&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;７&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;８&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;９&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;戻り値&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 2]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;読みの深さ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１８手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２１手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２５手&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;結論&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;　※連続で指し手を進めている場合一手と数えているケースがあるので手数はやや不正確です。&lt;/p&gt;

&lt;h4 id=&quot;検証１２２イージー&quot;&gt;検証１（２×２イージー）&lt;/h4&gt;
&lt;p&gt;　上の表を見て分かるように&lt;a href=&quot;/software/2020-06-07/mancala&quot;&gt;前回&lt;/a&gt;同様反復深化で調べると、２×２列で石の数が２個の場合５手読みで後手必勝となります。この手数なら短いので表を書いて確認出来そうです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;[0, 2, 2, 0, 2, 2]
=== result = 0, 2, i = 1
=== result = 1, 2, i = 2
=== result = 0, 2, i = 3
=== result = -999, 2, i = 4

[-999, 2]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　先読みメソッドからの戻り値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[-999, 2]&lt;/code&gt;となっていますが、先手は初手にどこを選んでも負けるけど最善手として&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選んだという意味です。&lt;br /&gt;
　まず、先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;を選んだ場合を見てみます。先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;を選んだら、自分のストアで撒き終わるのでもう一度先手の番となり、以下のように遷移します。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　なんと後手の手番を迎えること無く、いきなり先手サイドの石が無くなってゲーム終了。イージーのルールの場合カラハと同じで、残った石は自分のストアに集めて数えるので、先手&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;対後手&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6&lt;/code&gt;で後手の勝ちになります。&lt;br /&gt;
　だから先読みメソッドで先手の最善手として&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;ではなく&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を返してきたわけです。&lt;br /&gt;
　では先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選んだ場合を見てみます。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　上の局面で後手は２通りの手（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;か&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;）がありますが、この局面から後手の手番で先読みしてみると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,2,0,1,3,2];
result = second.think(board, first, 50, SECOND_WIN);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;　&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result = [-999, 4]&lt;/code&gt;となり&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;を選べば後手が勝てると言ってます。&lt;br /&gt;
　後手が２手目に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;を選んだら以下のようになります。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　次の先手は指し手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;に限定されるので進めると以下のようになります。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　この局面で後手の指し手は２通りありますが、ここまで来れば後手がもう一度&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;を選べば勝てることが分かると思います。お互いが最善手を選ぶことが前提となっていますので、ここで後手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;を選んだ場合を初手から省略せずに書くと以下のようになります。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　通算５手読みで後手必勝の結論は正しいようです。&lt;br /&gt;
　ちなみに後手が２手目に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;を選んだ場合は、遷移は省略しますが先手が勝つ変化もあるようです。&lt;/p&gt;

&lt;h3 id=&quot;相変わらず派生ルールが多過ぎ&quot;&gt;相変わらず派生ルールが多過ぎ&lt;/h3&gt;
&lt;p&gt;　ここまで書いてからマンカライージーのルールについて、&lt;strong&gt;「終了時にポケットにある石は無効になります。どちらの数にも入れません」&lt;/strong&gt;と書かれている&lt;a href=&quot;https://genki-up.recreation.or.jp/top/mancala/rule&quot;&gt;サイト&lt;/a&gt;を見つけてしまいました。そう言えば&lt;a href=&quot;https://hugkum.sho.jp/96590&quot;&gt;上で紹介したサイト&lt;/a&gt;には、「基本はベーシックと同じ」と書かれているだけでゲーム終了時に残った石の扱いについては書かれていません。カラハと同じでいいだろうと勝手に判断してしまいました。折角コツコツと遷移表を書いたのが勿体ないので上の文はそのままにして、表だけ「終了時にポケットにある石は無効にする」ルールで更新しておきます。&lt;/p&gt;

&lt;h3 id=&quot;実験結果３２列イージー終了時にポケットにある石は無効にするルール&quot;&gt;実験結果（３×２列イージー、終了時にポケットにある石は無効にするルール）&lt;/h3&gt;
&lt;p&gt;（2020-10-28一部訂正）&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;石の数&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;１&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;２&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;３&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;４&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;５&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;戻り値&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 3]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 1]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;読みの深さ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１６手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２３手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;結論&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;実験結果２２列イージー終了時にポケットにある石は無効にするルール&quot;&gt;実験結果（２×２列イージー、終了時にポケットにある石は無効にするルール）&lt;/h3&gt;
&lt;p&gt;（2020-10-28一部訂正）&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;石の数&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;１&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;２&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;３&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;４&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;５&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;６&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;７&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;８&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;９&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;戻り値&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 2]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;読みの深さ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;７手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１４手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１８手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２１手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２５手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２４手&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;結論&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;　上の検証で説明していた２×２列で石が２個のケースも全く逆の結論になります。&lt;br /&gt;
　上の説明で書いた先読みメソッドの実行結果も以下のように変わります。戻り値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[999, 1]&lt;/code&gt;で、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;を選べば先手必勝と返してきます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;[0, 2, 2, 0, 2, 2]
=== result = 999, 1, i = 1

[999, 1]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　「終了時にポケットにある石は無効にする」ルールだと、本文の検証を読んで貰えれば一手で先手必勝になることは分かると思います。ルールが変わると結果が真逆になるいい例として説明文も無駄にならなくてよかったです。&lt;/p&gt;

&lt;h3 id=&quot;カラハのルール&quot;&gt;カラハのルール&lt;/h3&gt;
&lt;p&gt;　マンカラカラハにもいろいろな派生ルールが存在するようで、ゲーム終了時に残った石は相手の物になるというルールも存在するようです。&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.marcnadero.kahalagame&quot;&gt;このアプリ&lt;/a&gt;ではどちらのルールにするかオプションで選べるようになっていて、残った石は相手に取られるルールの方が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;popular&lt;/code&gt;、自分の石になるルールが&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;classic&lt;/code&gt;となっています。残った石が相手のものになるルールの方が海外ではポピュラーなんでしょうか？&lt;br /&gt;
　任天堂のアソビ大全５１に収録されているマンカラは&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;classic&lt;/code&gt;ルールのようですが、日本ではこのルールがメジャーになると思われるので、今後マンカラに関する記事はアソビ大全５１のルールに絞ろうと思います。&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;アプリ&lt;/a&gt;も&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;classic&lt;/code&gt;ルールにしています。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/HTML5-CoffeeScriptで作る最強の三目並べプログラム-MIN-MAX法からαβ法へ-happyclam-ebook/dp/B01D1IJ0S0/ref=sr_1_1?s=digital-text&amp;amp;ie=UTF8&amp;amp;qid=1473938717&amp;amp;Sr=1-1&amp;amp;keywords=三目並べ&quot;&gt;電子書籍&lt;/a&gt;を買っていただいた方も数人いたようです、有難うございます。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 09 Aug 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/software/2020-08-09/mancala_easy</link>
        <guid isPermaLink="true">https://happyclam.github.io/software/2020-08-09/mancala_easy</guid>
        
        <category>dart</category>
        
        <category>android</category>
        
        <category>flutter</category>
        
        <category>mancala</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>マンカラは先手必勝？後手必勝？</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;&lt;img src=&quot;/images/ja_badge_web_generic.png&quot; alt=&quot;マンカラアプリ&quot; title=&quot;マンカラ ナッツ&quot; width=&quot;155&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://www.amazon.co.jp/happyclam-マンカラ-ナッツ/dp/B08D8QVVQY/ref=sr_1_10?__mk_ja_JP=カタカナ&amp;amp;dchild=1&amp;amp;keywords=マンカラ&amp;amp;qid=1595382601&amp;amp;s=mobile-apps&amp;amp;sr=1-10&quot;&gt;&lt;img src=&quot;/images/amazon-appstore-badge-jp-white.png&quot; alt=&quot;マンカラアプリ&quot; title=&quot;マンカラ ナッツ&quot; width=&quot;155&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;最古のボードゲームらしい&quot;&gt;最古のボードゲームらしい&lt;/h3&gt;
&lt;p&gt;　世界最古のボードゲームらしいのですが、存在自体知りませんでした。早速アプリをダウンロードして遊んでみたところ、何回か遊んでいるうちに勝つためのコツというのが少しずつ見えてきて楽しめましたが、それよりもこの単純なルールならすぐに人間に負けないＡＩが作れるんじゃないか？と思い試してみることにしました。&lt;/p&gt;

&lt;h3 id=&quot;派生のルールがいろいろあるらしい&quot;&gt;派生のルールがいろいろあるらしい&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;https://ja.wikipedia.org/wiki/マンカラ&quot;&gt;Wikipedia&lt;/a&gt;によるといろいろな遊び方があるようですが、たまたまダウンロードしたアプリは「ベーシック」と「カラハ」という２つのルールで遊べるもので、ベーシックをやってみてすごく単純なルールに興味を持ったのですが、最初にカラハのルールで遊んでいたら面倒そうなので自分でプログラムを作ってみようなんて思わなかったかも知れません&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;br /&gt;
　先手必勝か後手必勝かを調べる方法は、&lt;a href=&quot;/software/2014-09-23/tictactoe_arrange&quot;&gt;以前の記事&lt;/a&gt;で&lt;strong&gt;３手前に打った駒が消える特殊なルールの三目並べ&lt;/strong&gt;を例にして紹介したように、MIN-MAX法（+αβ法）で先読みの深さを徐々に深くしていって（反復深化）、お互い最善手を尽くしても先手が勝つ（先手必勝）のかあるいは後手が勝つ（後手必勝）のかを確認するやり方です。&lt;/p&gt;

&lt;h3 id=&quot;マンカラベーシックのルール&quot;&gt;マンカラベーシックのルール&lt;/h3&gt;
&lt;p&gt;　普通は６×２列×石４つで行うゲームですが、それだと先読みの際にまたスタックオーバーフローに見舞われるだろうと思い、取り敢えず３×２列で検証することにしました。下図は石が３つの場合です。&lt;/p&gt;

&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;4&quot; align=&quot;center&quot;&gt;後手のストア&lt;br /&gt;0↓&lt;/td&gt;
    &lt;td colspan=&quot;3&quot; align=&quot;center&quot;&gt;後手&lt;/td&gt;    
    &lt;td rowspan=&quot;4&quot; align=&quot;center&quot;&gt;先手のストア&lt;br /&gt;0↑&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;br /&gt;←&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;3&lt;br /&gt;←&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;br /&gt;←&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td colspan=&quot;3&quot; align=&quot;center&quot;&gt;先手&lt;/td&gt;    
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;br /&gt;→&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;3&lt;br /&gt;→&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;3&lt;br /&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　先手と後手が自分の穴のどれかを選んで全ての石を取り出し、矢印のように反時計回りに一つずつ石を撒いていく動作を先手後手交互に繰り返して、先に自分の穴の石が全てなくなれば勝ちです。自分か相手のストアで石を撒き終わった場合はもう一度自分の手番になります。&lt;/p&gt;

&lt;p&gt;　※&lt;a href=&quot;/software/2020-08-09/mancala_easy&quot;&gt;マンカライージーに関する記事&lt;/a&gt;も追加しました。&lt;/p&gt;

&lt;h3 id=&quot;dartで実装&quot;&gt;Dartで実装&lt;/h3&gt;
&lt;p&gt;　今リリースしている自分の将棋関連アプリの中で一番利用されている&lt;a href=&quot;https://play.google.com/store/apps/details?id=shogi55.io.github.happyclam&quot;&gt;５五将棋アプリ&lt;/a&gt;をFlutterで作り直そうかと思って、慣れるためにプログラミング言語はDartにしました。&lt;br /&gt;
　石の数は３つの場合&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;List board = [0,3,3,3,0,3,3,3];&lt;/code&gt;のようにリストを作ります。添字の&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;と&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;がストアになります。カラハのルールだと相手のストアには石を撒かないそうですが、ベーシックのルールだと相手のストアにも石を撒くので、このリストをシーケンシャルに処理していけばいいだけなので処理が単純です。またカラハのように自分の空の穴で石を撒き終わった時に相手の石を取る（capture）ことが出来るというルールもありません。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;void main() {
  final List board = [0,3,3,3,0,3,3,3];
  List result = new List();
  Player first = new Player(FIRST);
  Player second = new Player(SECOND);
  print(board);
  Stopwatch watch = new Stopwatch();
  watch.start();
  // result = first.think(board, second, 50, FIRST_WIN);
  // result = second.think(board, first, 50, SECOND_WIN);
  for (var i = 1; i &amp;lt; 50; i++){
    print(&quot;i = ${i}&quot;);
    result = first.think(board, second, i, FIRST_WIN);
    if (result[0] == FIRST_WIN || result[1] == SECOND_WIN){
      print(&quot;=== result = ${result[0]}, ${result[1]}, i = ${i}&quot;);
      break;
    }
  }
  print(watch.elapsedMilliseconds);
  print(result);

}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　一手読みから５０手読みまで反復深化で徐々に読みを深くしていって、先手勝ち（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;999&lt;/code&gt;）の評価値が返ってきたら先手必勝、後手勝ち（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-999&lt;/code&gt;）の評価値が返ってきたら後手必勝となります。この辺りの話は&lt;a href=&quot;/software/2014-09-23/tictactoe_arrange&quot;&gt;以前の記事&lt;/a&gt;を読んでみてください。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;  //評価関数
  int evaluate(List board){
    int first = 0;
    int second = 0;
    first = board.getRange(FIRST_START, FIRST_GOAL).where((value) =&amp;gt; value == 0).length;
    second = board.getRange(SECOND_START, DENTS).where((value) =&amp;gt; value == 0).length;
    if (first == WIN_COUNT &amp;amp;&amp;amp; second == WIN_COUNT){
      print(&quot;=============== Error =============================&quot;);
      return DRAW;
    } else if (first == WIN_COUNT){
      return FIRST_WIN;
    } else if (second == WIN_COUNT){
      return SECOND_WIN;
    } else {
      return (first - second);
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　評価関数は先手勝ち（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;999&lt;/code&gt;）か後手勝ち（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-999&lt;/code&gt;）、それ以外は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(先手の空になっている穴の数 - 後手の空になっている穴の数)&lt;/code&gt;にしていますが、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return 0&lt;/code&gt;でもいいと思います。形勢判断の評価関数として&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(先手の空になっている穴の数 - 後手の空になっている穴の数)&lt;/code&gt;というのはかなり雑ですが、読み切ってしまうことが目的なので適当で構いません。&lt;/p&gt;

&lt;h3 id=&quot;結果&quot;&gt;結果&lt;/h3&gt;
&lt;p&gt;　石の数を１〜９個にして、５０手先読みしたそれぞれの結果です。&lt;/p&gt;
&lt;h4 id=&quot;３２列ベーシック2020-10-28一部訂正&quot;&gt;３×２列（ベーシック）（2020-10-28一部訂正）&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;石の数&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;１&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;２&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;３&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;４&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;５&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;６&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;７&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;８&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;９&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;戻り値&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 3]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 3]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 3]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;読みの深さ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;４手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２３手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２３手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;３６手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;３３手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;４３手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;４８手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;結論&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;※先読み関数の外側のループで手数をカウントしてるため、手数は若干不正確です&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;　先読みメソッドの戻り値は（評価値,指し手）となっていて、評価値に最大値（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;999&lt;/code&gt;）が返ってきたら先手必勝、最小値（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-999&lt;/code&gt;）が返ってきたら後手必勝です。石の数４個の場合、先手が初手にリストの&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;の位置を選べば先手必勝であることを表しています。石の数７個の時は後手必勝となりました。指し手に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;が返ってきているのは、取り敢えず最善手として&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んだという意味で、深い意味はありません。先手は勝てないことが分かったけど取り敢えず最善手として&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んだということです。&lt;/p&gt;

&lt;h3 id=&quot;検証１石が１個の時&quot;&gt;検証１（石が１個の時）&lt;/h3&gt;
&lt;p&gt;　取り敢えず石の数１個の時のケースを確認しましょう。先手が初手に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;の場所を選んで石を撒いた直後の状態は以下のようになります。&lt;/p&gt;

&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　後手はこの次にどこを選んでも（以下の図は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;を選んだ場合）、先手は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選べば自分のストアに石を撒き終わるので次も先手の番です。その結果、３手連続で着手することが出来るので以下のように遷移して先手が勝てます。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　先手が一手指した後の状態から、後手の立場で先読みしてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,0,2,1,0,1,1,1];
result = second.think(board, first, 50, SECOND_WIN);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　戻り値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[999, 7]&lt;/code&gt;となって後手は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7&lt;/code&gt;を選ぶけど、先手必勝（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;999&lt;/code&gt;）の結論は変わりません。&lt;br /&gt;
　後手は２手目にどこを選んでも負けるのですが、２手目は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7&lt;/code&gt;を選んだ方が上で紹介した評価関数に従って有利と判定されるので&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7&lt;/code&gt;が最善手となります。初手からの遷移を省略せずに書くと以下のようになります。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　都合７手で先手勝ちなのですが、最後に先手が連続で着手出来るので５手読みで先手必勝と分かります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;[0, 1, 1, 1, 0, 1, 1, 1]
i = 1
i = 2
i = 3
i = 4
=== result = 999, 1, i = 4
6
[999, 1]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;　main関数の出力も&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i = 4&lt;/code&gt;（５手読み）で先手が勝つと表示されます。&lt;/p&gt;

&lt;h3 id=&quot;検証２石が４個の時&quot;&gt;検証２（石が４個の時）&lt;/h3&gt;
&lt;p&gt;　石の数が１の場合は簡単に検証できましたが、石の数が２個以上の場合は何十手もかかるので、目で追うだけで検証するのは大変です。簡単にみていきます。&lt;br /&gt;
　石の数が４個の場合は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;の位置を選べば３８手で先手必勝と表示されます。先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;の位置を選んで石を撒いたら以下の状態になります。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　この状態から後手の手番で先読みしてみましょう。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,4,0,5,1,5,5,4];
result = second.think(board, first, 50, SECOND_WIN);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　戻り値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[999, 7]&lt;/code&gt;となって先手必勝（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;999&lt;/code&gt;）の結論は変わりません。&lt;br /&gt;
　今度は初期状態から先手（下側）と後手（上側）の順番を入れ替えて、本来の後手（上側）から先読みしてみると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,4,4,4,0,4,4,4];
result = second.think(board, first, 50, SECOND_WIN);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　戻り値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[-999, 6]&lt;/code&gt;となって&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;の対称の位置にある&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6&lt;/code&gt;を選べば本来の後手（上側）が必勝と判定されます。上下対象の配置なので当然こうなるべきで、これも一応プログラムは正しく動いてそうです。&lt;/p&gt;

&lt;h3 id=&quot;６２ではどうなのか&quot;&gt;６×２ではどうなのか&lt;/h3&gt;
&lt;p&gt;　３×２列のマンカラでなく、通常の６×２列で石の数が４個のマンカラではどうなのか調べたいと思い、まず石１個でやってみました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,1,1,1,1,1,1,0,1,1,1,1,1,1];
result = second.think(board, first, 50, SECOND_WIN);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　結果は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[999, 1]&lt;/code&gt;となって先手が初手に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;の場所を選べば先手必勝のようです。&lt;br /&gt;
　ただ、石２個、３個、４個で試すと&lt;del&gt;循環する手順があるのか、&lt;/del&gt;丸一日動かしていても結果が返って来ませんでした。まだ原因がはっきり分かっていませんが、循環する手順があるとしてもそこに入り込む必要なく必勝手順を辿ることが出来たということなので、&lt;strong&gt;必勝の結論を返してきた分に関しては間違いない&lt;/strong&gt;と思います&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;。バグがなければの話ですが…。&lt;br /&gt;
　ベーシックのルール特有のケースかもしれないので、先にカラハのルールを実装して試してみようかなどと考えていますが、いずれにしても読み切るには結構時間が掛かるので、三目並べのように絶対人間に負けないプログラムを作るのは思っていたほど簡単ではないようです。&lt;br /&gt;
　カラハのルールだと自分の空の穴で撒き終わった場合に相手の石を取ることが出来るというルールがあるので、ベーシックのルールより早くゲームを終わらせる必勝手順があるような気がしていますが、どうなるか分かりません。&lt;/p&gt;

&lt;h3 id=&quot;マンカラカラハの結果2020-06-17追記&quot;&gt;マンカラカラハの結果（2020-06-17追記）&lt;/h3&gt;
&lt;p&gt;　マンカラカラハのルールに対応したので結果を載せておきます。カラハでは自分の穴の石が無くなったら勝ちではなく、先手・後手どちらかの全ての穴が空になったらゲーム終了して残った石は自分のストアに戻し、その時点でのストアに溜まった石の数で勝敗を決めるので、評価関数は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;先手のストア内の石の数 - 後手のストア内の石の数&lt;/code&gt;です。マンカラベーシックのルールに較べて短手数での必勝手順が存在するのは、やはり相手の石を取ることが出来るルールによるものでしょう。&lt;/p&gt;

&lt;h4 id=&quot;３２列カラハ2020-10-28一部訂正&quot;&gt;３×２列（カラハ）（2020-10-28一部訂正）&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;石の数&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;１&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;２&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;３&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;４&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;５&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;６&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;７&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;戻り値&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[0, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 2]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[-999, 3]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 3]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;読みの深さ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;５０手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;７手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１７手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２４手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１７手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１９手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;２３手&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;結論&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;引分け&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;後手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;検証３２カラハ&quot;&gt;検証（３×２カラハ）&lt;/h3&gt;
&lt;p&gt;　ベーシック同様簡単に検証してみます。&lt;br /&gt;
　例えば石１個の場合、以下のようにベーシックの例と同じようにゲームが進行したとします。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 11px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　カラハのルールでも先手・後手どちらかの石が無くなればゲーム終了しますが、最後に残りの石を自分のストアに戻すことになりますので、先に先手の石が空になってもこの進行だと３対３の引き分けになり、当然ですがベーシックとは違う結果になります。&lt;br /&gt;
　次に石６個のケースを見てみると、戻り値は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[-999, 3]&lt;/code&gt;となっていますが、この場合ベーシックの時にも説明したように先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んだことには深い意味はありません。先手がどこを選んでも負ける（評価値&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-999&lt;/code&gt;）けど最善手として&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んだというだけの話です。では後手の初手は何が最善手なのか見ていきます。&lt;br /&gt;
　石６個で先手が初手に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;を選んだ直後の状態は以下のようになります。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　この状態から後手の手番で先読みすると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,0,7,7,1,7,7,7];
result = second.think(board, first, 50, SECOND_WIN);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;　結果は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[-999, 5]&lt;/code&gt;となって後手は２手目に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;を選べば勝てると言っています。&lt;br /&gt;
　次に先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;を選んだ場合を見てみましょう。&lt;strong&gt;カラハでは相手のストアには石を撒かないことが注意点です。&lt;/strong&gt;&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,7,0,7,1,7,7,7];
result = second.think(board, first, 50, SECOND_WIN);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　結果は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[-999, 5]&lt;/code&gt;となって後手は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;を選べば勝てると言っています。同様に先手が&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;を選んだ場合を見てみましょう。&lt;/p&gt;

&lt;div style=&quot;width:500px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 15px 0px&quot;&gt;
&lt;span&gt;→&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;td rowspan=&quot;2&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;    
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt;
    &lt;td align=&quot;center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,7,7,0,1,7,7,7];
result = second.think(board, first, 50, SECOND_WIN);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;　結果は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[-999, 6]&lt;/code&gt;となって後手は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6&lt;/code&gt;を選べば勝てると言っています。先手が初手に&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;のどれを選んでも後手必勝（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-999&lt;/code&gt;）の結論は変わっていないので一応プログラムとしては一貫した結果が返ってきています。&lt;br /&gt;
　あと、相手の石を取る（capture）ケースも自分なりに確認していますが、図を書くのに疲れたので検証はここまでにします。&lt;/p&gt;

&lt;h4 id=&quot;６２列カラハ2020-06-21追記&quot;&gt;６×２列（カラハ）（2020-06-21追記）&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;石の数&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;１&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;２&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;３&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;４&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;５&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;６&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;７&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;戻り値&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 6]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[999, 5]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;読みの深さ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１５手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;１９手&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;結論&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先手必勝&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;？？？&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;？？？&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;　石の数を３個以上にするとベーシックの時と同じように先読みメソッドから返事が返って来ませんでした。&lt;del&gt;千日手になってしまっているのだと思いますが、深くは調べていません。同一局面が現れたら手を変えるようにして千日手を無理やり回避するようにプログラムを改変すると、それは勝ち負けどちらの結果になったとしても必然の手順ではないということになってしまうので、&lt;/del&gt; 実験は一旦ここで打ち切ろうと思います。&lt;br /&gt;
　（訂正）冷静に考えると石を撒きながら自分のストアを通過する度に動かせる石が減っていくので、千日手（循環手順）があるとは思えません。GUIでテスト中に何かバグが見つかるかもと期待していましたが、アプリのテスト中も今のところバグらしきものは見つけられません&lt;sup id=&quot;fnref:4&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;ので、局面が増えた時になぜ先読みメソッドがループ？に入るのか謎です。それとこの手の先読みプログラムをDartで作ったのは初めてなのですが、先読みの深さを1000とか10000とかにしてもスタックオーバーフローが発生しない理由がよく分からないのですが、そのことと何か関係があるのかも知れません。&lt;/p&gt;

&lt;h3 id=&quot;強いマンカラアプリ&quot;&gt;強いマンカラアプリ&lt;/h3&gt;
&lt;p&gt;　自分のプログラムを１０手読みに設定して日本製の２つのアプリと何回か対戦させたのですが、負けは経験していないので今のところバグは無いのではと思っています&lt;sup id=&quot;fnref:5&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;。数あるAndroidアプリの中で一番強いマンカラアプリがどれなのか知りませんが、全体的に強さを追求しているアプリは少ないのかも知れません。それと海外製のアプリもいくつか触ってみましたが、ルールが微妙に違っていたりする&lt;sup id=&quot;fnref:6&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;ので、強さを比較するためにはそれぞれのルールに対応しなければならず結構大変です。海外製のアプリと強さを比較するために今後ルールを変更するかも知れません。そうすると上記の表の結果も変わって来ると思います。いろいろ派生ルールがあると面倒です、しかも何回か対戦しないと気付かないような微妙な違いなので厄介です。&lt;br /&gt;
※一例を挙げると&lt;a href=&quot;https://play.google.com/store/apps/details?id=io.ccgames.mancala&quot;&gt;この海外製アプリ&lt;/a&gt;と対戦させて自分のプログラムが勝ち判定出した後に負けたのですが、&lt;a href=&quot;https://play.google.com/store/apps/details?id=io.ccgames.mancala&quot;&gt;このアプリ&lt;/a&gt;はカラハとは違って&lt;strong&gt;Oware&lt;/strong&gt;というルールになっているようです。違うルールで先読みしていたら負けるのも当然です。&lt;/p&gt;

&lt;h3 id=&quot;アプリ作ってみました2020-07-05追記&quot;&gt;アプリ作ってみました（2020-07-05追記）&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;マンカラアプリ&lt;/a&gt;を作ってみました。まだ機能は少ないですが、今後追加していくつもりです。&lt;br /&gt;
　せっかくFlutterで作ったのでiPhone版もリリースしたいところですが、開発者登録費用の年間約10,000円を回収できる目処が立てばリリースするかも知れません&lt;sup id=&quot;fnref:7&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:7&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&quot;計算量の問題だけだったみたい2020-08-01追記&quot;&gt;計算量の問題だけだったみたい（2020-08-01追記）&lt;/h3&gt;
&lt;p&gt;　本文中、「先読みメソッドから戻ってこない理由が分からない」とややこしいこと書いていますが、単に私が待ち切れなかっただけのようです。３×２列から６×２列に配列要素を増やすことで当然計算量は増えますが、それだけでなく石の数を増やすことでもかなりの計算量の増加があるようです。&lt;br /&gt;
　以下は６×２列のカラハで石の数を２にして、反復深化で先読みさせたFlutterのテストの実行結果です。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;00:02 +0: First thinking test2 depth = 1
result = [1, 5], depth = 1
00:02 +1: First thinking test2 depth = 2
result = [0, 5], depth = 2
00:02 +2: First thinking test2 depth = 3
result = [3, 5], depth = 3
00:02 +3: First thinking test2 depth = 4
result = [4, 5], depth = 4
00:02 +4: First thinking test2 depth = 5
result = [5, 5], depth = 5
00:02 +5: First thinking test2 depth = 6
result = [4, 5], depth = 6
00:02 +6: First thinking test2 depth = 7
result = [5, 5], depth = 7
00:02 +7: First thinking test2 depth = 8
result = [4, 5], depth = 8
00:02 +8: First thinking test2 depth = 9
result = [4, 5], depth = 9
00:03 +9: First thinking test2 depth = 10
result = [4, 5], depth = 10
00:04 +10: First thinking test2 depth = 11
result = [3, 5], depth = 11
00:08 +11: First thinking test2 depth = 12
result = [5, 5], depth = 12
00:17 +12: First thinking test2 depth = 13
result = [4, 5], depth = 13
00:46 +13: First thinking test2 depth = 14
result = [5, 5], depth = 14
01:47 +14: First thinking test2 depth = 15
result = [6, 5], depth = 15
05:41 +15: First thinking test2 depth = 16
result = [2, 6], depth = 16
16:16 +16: First thinking test2 depth = 17
result = [3, 6], depth = 17
41:56 +17: First thinking test2 depth = 18
result = [999, 5], depth = 18
92:59 +18: All tests passed!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;　最後の行の１９手読みの実行時間は９２分５９秒ですが、反復深化で調べると１手読みからの累積時間が必要となる（同じ経路を何度も調べている）ので、手間を惜しんで以下のように一気に５０手読みをさせていました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,2,2,2,2,2,2,0,2,2,2,2,2,2];
Stopwatch watch = new Stopwatch();
watch.start();
result = first.think(board, second, 50, FIRST_WIN);
print(watch.elapsedMilliseconds);
print(result);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;　この実行結果は以下のようになります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;4389283
[999, 5]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　4389283ミリ秒＝約１時間１３分で反復深化で調べるより時間が短縮できます。&lt;br /&gt;
そこで手数は分からなくてもいいから、まず５０手以内に必勝手順が存在するかどうかを確認しようと思い、石３個の場合も以下のように一気に５０手読みで実行していました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;final List board = [0,3,3,3,3,3,3,0,3,3,3,3,3,3];
Stopwatch watch = new Stopwatch();
watch.start();
result = first.think(board, second, 50, FIRST_WIN);
print(watch.elapsedMilliseconds);
print(result);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　そして、丸一日経ってもプログラムが終了しないので、おかしいなぁと悩んでた訳です。&lt;br /&gt;
　でも、このやり方だと石２個の時のように必勝の結論が得られればいいですが、その結論が得られない場合、計算量が指数関数的に増えて必要な時間も増えていきます。&lt;br /&gt;
　試しに石３個の場合にどれぐらいの時間が必要なのか確認してみたのが以下の結果です。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Dart&quot;&gt;00:08 +0: First thinking test3 depth = 1
result = [5, 4], depth = 1
00:08 +1: First thinking test3 depth = 2
result = [4, 4], depth = 2
00:08 +2: First thinking test3 depth = 3
result = [1, 5], depth = 3
00:08 +3: First thinking test3 depth = 4
result = [3, 5], depth = 4
00:08 +4: First thinking test3 depth = 5
result = [1, 6], depth = 5
00:08 +5: First thinking test3 depth = 6
result = [3, 6], depth = 6
00:08 +6: First thinking test3 depth = 7
result = [3, 5], depth = 7
00:08 +7: First thinking test3 depth = 8
result = [2, 5], depth = 8
00:08 +8: First thinking test3 depth = 9
result = [2, 5], depth = 9
00:09 +9: First thinking test3 depth = 10
result = [4, 5], depth = 10
00:12 +10: First thinking test3 depth = 11
result = [3, 5], depth = 11
00:24 +11: First thinking test3 depth = 12
result = [2, 5], depth = 12
01:09 +12: First thinking test3 depth = 13
result = [3, 5], depth = 13
04:02 +13: First thinking test3 depth = 14
result = [3, 5], depth = 14
13:20 +14: First thinking test3 depth = 15
result = [4, 5], depth = 15
42:39 +15: First thinking test3 depth = 16
result = [4, 5], depth = 16
136:42 +16: First thinking test3 depth = 17
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　最初の内は読みが深くなっても時間はそれほど変わりませんが、途中から一手読みが深くなる毎に２倍、３倍と増えていくのが分かります。１８手読みまでに必勝手順は見つからず、１８手読みの時に136分（約２時間強）以上かかっています。このペースで時間が増えていくと５０手読みだと数週間では済まないかも知れません。どおりで１日では終わらない訳です。５０手までに必勝手順が存在すれば数日で終了するかも知れませんがなんとも言えません。また、石４個だとさらに時間が必要になります。数ヶ月掛かるんじゃないでしょうか？&lt;br /&gt;
　ちなみに石１個だと「１５手で先手必勝」の結論が、実行時間わずか７秒で得られます。石１個→７秒、石２個→１時間強なら、石３個→「丸一日あれば十分かな」と考えたのが甘かったようです。&lt;br /&gt;
　実行環境は&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CPU:&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Memory: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12GB&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Dart: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dart VM version: 2.8.4 (stable) (Unknown timestamp) on &quot;linux_x64&quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;です。どうしようか思案中です。&lt;/p&gt;

&lt;p&gt;　※ TypeScriptとC++でも試してみました&lt;a href=&quot;/software/2020-09-19/js_dart_cpp&quot;&gt;「Dartは遅いけど、FlutterでGUIは有り」&lt;/a&gt;。
　※ 強いアプリを厳選して手動で対戦させて、先手必勝なのか後手必勝なのか推測してみました&lt;a href=&quot;/software/2021-01-22/mancala_evaluate02&quot;&gt;「マンカラは後手でも勝てるか？」&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;ソースファイル&quot;&gt;ソースファイル&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;/software/2014-09-23/tictactoe_arrange&quot;&gt;以前の記事&lt;/a&gt;の「３手前に打った駒が消える特殊なルールの三目並べ」のように&lt;a href=&quot;https://github.com/happyclam/tictactoe_ruby/tree/arrange&quot;&gt;github&lt;/a&gt;でソースを公開しようと思っていたのですが、google play内の日本製のマンカラアプリで遊んでみて、少し惜しくなったというのが本音です。アプリのアクティブユーザー数が1,000に達したらこの記事で使用しているソース（=アプリからGUI部分を除いたソース）を公開しようと思ってます。&lt;br /&gt;
　またMIN-MAX法やαβ法のアルゴリズムに興味のある方は、よろしければ&lt;a href=&quot;https://www.amazon.co.jp/HTML5-CoffeeScriptで作る最強の三目並べプログラム-MIN-MAX法からαβ法へ-happyclam-ebook/dp/B01D1IJ0S0/ref=sr_1_1?s=digital-text&amp;amp;ie=UTF8&amp;amp;qid=1473938717&amp;amp;Sr=1-1&amp;amp;keywords=三目並べ&quot;&gt;この本&lt;/a&gt;を買ってみてください。使用言語はCoffeeScript（JavaScript）ですが、本の中の相互再帰のやり方と今回の検証プログラムはほとんど同じやり方で、マンカラの場合は連続で指し手が続くケースがあるのでその部分だけif文（数行）が追加されている感じです。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;マンカラベーシックという呼び方が同じでも国や地域によってルールが違うようです。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;先読み関数から手数を返せば正確になるのですが、今のところやってません。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;この辺りの事情は&lt;a href=&quot;http://localhost:4000/software/2014-10-04/arrange_line&quot;&gt;以前の記事&lt;/a&gt;にも書きました。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;アプリの設定をExpertにすると１０手読みですが、他のアプリと対戦させてみても結構強いです。絶対負けないプログラムにするにはこの記事の実験結果から考えて２０手以上の先読みが必要になると思われるので、アプリに実装するのは応答時間の問題で難しいと思います。海外製の強いアプリをいくつか見つけましたが、データ構造を小さくしたり、定跡データ化したり工夫しているのだと思います。やはり歴史が長い海外製の方がずっと先を行ってそうです。それかオープンソースの優秀なマンカラ用のライブラリが既にあるのかも知れません。 &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;微妙なバグがありました。本文には影響ないのですが、表は数カ所2020-10-28に更新しています。どこが変わったかはgithubの履歴を見てください。&lt;a href=&quot;https://play.google.com/store/apps/details?id=mancala.io.github.happyclam&quot;&gt;アプリ&lt;/a&gt;に関しては修正済みです。 &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;自分のプログラムは先手の手番で全ての石が空になったらその時点でゲーム終了としていますが、先手番でゲームが終了したら、後手の指し手をもう一手進めてからゲームを終了するルールもあるようです。石を撒く回数を先手と後手で公平にするという意図でしょうか？ &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:7&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;以前Cordovaで作成した機械学習型ＡＩアプリを&lt;a href=&quot;https://play.google.com/store/apps/details?id=tictactoe_evo.io.github.happyclam&quot;&gt;「進化する三目並べ」&lt;/a&gt;と題してiPhoneアプリとして公開していたのですが、売れなかったので１年間で止めてしまいました。 &lt;a href=&quot;#fnref:7&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 07 Jun 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/software/2020-06-07/mancala</link>
        <guid isPermaLink="true">https://happyclam.github.io/software/2020-06-07/mancala</guid>
        
        <category>dart</category>
        
        <category>android</category>
        
        <category>flutter</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>同じ規格でもタイヤの高さは違うことがある</title>
        <description>&lt;h3 id=&quot;新たなネタ&quot;&gt;新たなネタ&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;/miscellaneous/2020-05-16/bicycle01&quot;&gt;前回&lt;/a&gt;初めて自転車ネタをブログに書いた後、淀川沿いを走ってきたら、またブログネタが降って湧いてきたので続けて自転車の話題を書いてみます。&lt;/p&gt;

&lt;h3 id=&quot;ガラス片でタイヤに裂け目が&quot;&gt;ガラス片でタイヤに裂け目が&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;/miscellaneous/2020-05-16/bicycle01&quot;&gt;前回の記事&lt;/a&gt;で書いた通り新しいブレーキにして試乗して家に帰ったら、タイヤに亀裂が出来て中のカーカスが飛び出していました。道中ガラス片が散らばっている場所をうっかり通ったので、その時に切れたのだと思います。&lt;/p&gt;

&lt;div style=&quot;width:400px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 0px 0px&quot;&gt;
&lt;a href=&quot;/images/pre_rear_fender.png&quot;&gt;&lt;img width=&quot;120&quot; src=&quot;/images/pre_rear_fender.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div style=&quot;float:left; margin: 0px 5px 0px&quot;&gt;
&lt;a href=&quot;/images/crack01.png&quot;&gt;&lt;img width=&quot;120&quot; src=&quot;/images/crack01.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;a href=&quot;/images/crack02.png&quot;&gt;&lt;img width=&quot;120&quot; src=&quot;/images/crack02.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;　タイヤを外して中を確認すると、亀裂はタイヤの中までは達していなかったのですが&lt;/p&gt;
&lt;div style=&quot;width:400px; margin: 0 auto;&quot;&gt;
&lt;div&gt;
&lt;a href=&quot;/images/crack03.png&quot;&gt;&lt;img width=&quot;160&quot; src=&quot;/images/crack03.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;　せっかく外したので、ついでに新しいタイヤに変えることにしました。&lt;/p&gt;

&lt;div style=&quot;width:400px; margin: 0 auto;&quot;&gt;
&lt;div style=&quot;float:left; margin: 0px 20px 0px;&quot;&gt;
&lt;a href=&quot;/images/old_tire01.png&quot;&gt;&lt;img width=&quot;160&quot; src=&quot;/images/old_tire01.png&quot; alt=&quot;外したタイヤ&quot; title=&quot;外したタイヤ&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;a href=&quot;/images/new_tire01.png&quot;&gt;&lt;img width=&quot;160&quot; src=&quot;/images/new_tire01.png&quot; alt=&quot;新しいタイヤ&quot; title=&quot;新しいタイヤ&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;　上の新旧二つのタイヤは規格上同じサイズ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETRTO 28-451&lt;/code&gt;サイズです。&lt;/p&gt;

&lt;div style=&quot;width:400px; margin: 0 auto;&quot;&gt;
&lt;div&gt;
&lt;a href=&quot;/images/compare_tire.png&quot;&gt;&lt;img width=&quot;320&quot; src=&quot;/images/compare_tire.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;一晩経つとサイズが変わっていた&quot;&gt;一晩経つとサイズが変わっていた&lt;/h3&gt;
&lt;p&gt;　タイヤを付け替えた次の日の朝に注油しようと思いタイヤを回そうとするとタイヤが回りません。何が引っかかっているのかよく確認すると、後輪ブレーキに付けていた&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1baf65b2.49d34a94.1baf65b3.a627089c/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Ffalcon-bike%2Fpa_xmaruix_gds01100%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjEsImJidG4iOjEsInByb2QiOjB9&quot;&gt;リアフェンダー&lt;/a&gt;の金具がタイヤと接触していました。わずかに触れるという程度ではなくピッタリ密着していて指一本ではタイヤが動かせないって感じです。&lt;/p&gt;

&lt;div style=&quot;width:400px; margin: 0 auto;&quot;&gt;
&lt;a href=&quot;/images/rear_fender.png&quot;&gt;&lt;img width=&quot;160&quot; src=&quot;/images/rear_fender.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;　金具の厚みは3mm程でしょうか。タイヤを付け替えた時は気がつかなかったのですが、一晩で膨らんで高さが変わったことになります。こんなことってあるんですねぇ:sweat_smile:&lt;br /&gt;
　これだけ変わるとタイヤ周長もかなり変わりそうです。&lt;/p&gt;
&lt;div style=&quot;width:400px; margin: 0 auto;&quot;&gt;
&lt;div&gt;
&lt;a href=&quot;/images/no_fender.png&quot;&gt;&lt;img width=&quot;320&quot; src=&quot;/images/no_fender.png&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;　仕方がないのでリアフェンダーを取り外して乗ることにしましたが、確かにブレーキと後輪の隙間はほとんどなく、リアフェンダー用の金具を取り付ける隙間は無くなっています。&lt;/p&gt;

&lt;h3 id=&quot;同じ規格のタイヤでも高さと周長は変わる&quot;&gt;同じ規格のタイヤでも高さ（と周長）は変わる&lt;/h3&gt;
&lt;p&gt;　今ではシュワルベワン（SCHWALBE ONE）に製品ラインアップが変わって入手出来ないのですが、外したタイヤ（シュワルベ デュラノ 20×1*1/8(451) BK DURANO）と&lt;a href=&quot;https://www.amazon.co.jp/SCHWALBE-%E3%82%B7%E3%83%A5%E3%83%AF%E3%83%AB%E3%83%99-%E3%80%90%E6%AD%A3%E8%A6%8F%E5%93%81%E3%80%91%E3%83%87%E3%83%A5%E3%83%A9%E3%83%8E-%E3%82%AF%E3%83%AA%E3%83%B3%E3%83%81%E3%83%A3%E3%83%BC%E3%82%BF%E3%82%A4%E3%83%A4-%E3%80%90%E3%83%AD%E3%83%BC%E3%83%89%E3%83%BB%E5%B0%8F%E5%BE%84%E8%BB%8A%E3%83%BB%E3%83%9F%E3%83%8B%E3%83%99%E3%83%AD%E3%80%91/dp/B00MJO6XUG&quot;&gt;新しいタイヤ&lt;/a&gt;はどちらも&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETRTO 28-451&lt;/code&gt;規格ですが、タイヤの高さは製品によって違うってことですね。&lt;br /&gt;
　でもこれってどう考えればいいのでしょう？タイヤが伸び易い素材に変わった？品質が落ちて薄っぺらいタイヤになったから伸びた？でも空気圧の規定は同じ85psi~115psiなので品質の違いではなく、おそらく型番が変わってタイヤそのものの面積が大きくなったのだと思います。新しく装着したタイヤを外してビードから反対側のビードのまでの長さを測れば判ると思うのですが、面倒なので止めておきます。&lt;br /&gt;
　とにかく今までより空気を入れた状態でのタイヤの高さが大きくなったということは、空気圧も同じだから中の空気量は増えているはずです (ホイールは変えてませんし) 。空気量が変われば乗り心地も変わることが多いですが、はっきりとは分かりませんでした。言われてみれば幾分滑らかになったかなぁという気がします。&lt;/p&gt;

&lt;h3 id=&quot;大きなタイヤは乗り心地が滑らか&quot;&gt;大きなタイヤは乗り心地が滑らか&lt;/h3&gt;
&lt;p&gt;　以前&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETRTO 23-451&lt;/code&gt;から&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETRTO 28-451&lt;/code&gt;に変えた時は、はっきり乗り心地が変わりました。&lt;/p&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/kenda_23c.png&quot;&gt;&lt;img src=&quot;/images/kenda_23c.png&quot; alt=&quot;KENDA23CとSCHWALBE28C&quot; width=&quot;320&quot; title=&quot;KENDA23CとSCHWALBE28C&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;　左がバイク（IDIOM2）購入時に元から付いていた23Cのタイヤで、右が今回裂けて取り外した28Cのタイヤの装着当時の写真です。これだけタイヤ幅が違う（＝空気量が違う）とお尻や腕への振動の伝わり方が全然違って、乗っていて楽ですしペダルを踏んでいない時のタイヤの転がりもスムースに感じました。一般的に細いタイヤの方がスピードが出ると言われていますが、レースに出るつもりなんて無い自分には断然28Cの方が快適でした。&lt;br /&gt;
　と言いながらも持っているロードバイクの方は今でも23Cを付けているのですが、次は25Cか28Cにしようと思っています。世間的にも太めのタイヤが見直されているようです。&lt;/p&gt;

&lt;h3 id=&quot;追記&quot;&gt;追記&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1bc8f4a0.6e824d6a.1bc8f4a1.d36f627c/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fa-price%2F4589946139044%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjEsImJidG4iOjEsInByb2QiOjB9&quot;&gt;DOPPELGANGER(ドッペルギャンガー) 超大容量サドルバッグ&lt;/a&gt;を買いました。これ普段は&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1baf65b2.49d34a94.1baf65b3.a627089c/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Ffalcon-bike%2Fpa_xmaruix_gds01100%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjEsImJidG4iOjEsInByb2QiOjB9&quot;&gt;リアフェンダー&lt;/a&gt;の代わりになりますし、出かけた帰り道に食料品などを買って帰ることが出来るので重宝します。細長いので荷物の入れ方に工夫が必要ですが、１７リットルの容量なので結構な量を格納できます。&lt;/p&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/saddle_bag.png&quot;&gt;&lt;img src=&quot;/images/saddle_bag.png&quot; alt=&quot;サドルバッグ&quot; width=&quot;320&quot; title=&quot;サドルバッグ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 21 May 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/miscellaneous/2020-05-21/bicycle02</link>
        <guid isPermaLink="true">https://happyclam.github.io/miscellaneous/2020-05-21/bicycle02</guid>
        
        <category>bicycle</category>
        
        
        <category>miscellaneous</category>
        
      </item>
    
      <item>
        <title>ロード系ミニベロのカスタマイズ</title>
        <description>&lt;h3 id=&quot;昔は買い物カゴ付きのママチャリで不満はなかった&quot;&gt;昔は買い物カゴ付きのママチャリで不満はなかった&lt;/h3&gt;
&lt;p&gt;　偶にロードバイクで出かけることがあるのですが、このブログでは自転車について全然触れたことがありませんでした。今まで自転車に関する記事を書かなかったのは、自分が自転車に嵌っていたのがこのブログを始める少し前だったというのが主な理由ですが、最近久しぶりにミニベロのカスタマイズをしたので、ちょっと自転車について書いてみたくなりました。&lt;br /&gt;
　自分で自転車のカスタマイズをしようなんて思う人は少ないかもしれませんが、自転車への理解が深まっていくと、これが結構嵌るものなんです。プログラミングから自作パソコン弄りに凝りだすのと似ていると思います。&lt;br /&gt;
　ママチャリしか知らなかった自分がどんな風に自転車弄りに嵌っていったか昔を思い出して紹介します。&lt;/p&gt;

&lt;h3 id=&quot;ママチャリで山を登るのは辛い&quot;&gt;ママチャリで山を登るのは辛い&lt;/h3&gt;
&lt;p&gt;　変速機付きの自転車（ママチャリ）で近くの山に行ってみたことが始まりです。５段変速なので普通に登れると思っていたら、頂上までの道程の多くは自転車を押しながら歩く羽目になりました。当時は自転車を押して歩くことには全然抵抗なかったのですが、山に行くと多くのローディ（ロードバイク乗り）が、息を切らしながら自転車を押している自分の横をスイスイと追い抜いて行くんです。ヘルメット被ってレーパン（レーサーパンツ）とピチピチジャージでロードバイクに乗っている人たちには全然興味がなかった（むしろ避けたかった）のですが、この時に「いい自転車、高級な自転車というのは軽い自転車なんだ」ということを知りました。&lt;br /&gt;
　そこでロードバイクじゃなくても、もう少しグレードアップしてなんとなくママチャリよりはかっこいい自転車が欲しいと思ってロード系ミニベロ（小径車）と呼ばれる自転車を買った&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;ことが、自転車に嵌り出した切っ掛けです。
　&lt;/p&gt;
&lt;h3 id=&quot;自転車には自分に合ったサイズがある&quot;&gt;自転車には自分に合ったサイズがある&lt;/h3&gt;
&lt;p&gt;　自転車についてよく分かっていなかった自分が最初に選んだママチャリ以外の自転車は、とにかく軽くてカッコイイという理由で当時発売されたばかりのGIANTのIDIOM2というものでした↓。&lt;/p&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/idiom2_2010.png&quot;&gt;&lt;img src=&quot;/images/idiom2_2010.png&quot; alt=&quot;IDIOM2 2010&quot; width=&quot;320&quot; title=&quot;IDIOM2 2010&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;　サドルよりハンドル位置が高くて、今見るとカッコ悪いと感じるのですが、ママチャリしか知らなかった購入当時はそんな風には思いませんでした。目が肥えてくるとそう感じるようになると思います。&lt;br /&gt;
　また、このIDIOM2というバイクはトップチューブ550mmという非常に身長の高い人向けにも対応している製品で、自分には全然サイズが合っていないバイクなのですが、当時は分かっていませんでした。&lt;br /&gt;
　ここから徐々にバイクのカスタマイズが始まります。&lt;/p&gt;

&lt;h3 id=&quot;お尻が痛いサドル交換&quot;&gt;お尻が痛い（サドル交換）&lt;/h3&gt;
&lt;p&gt;　今ではどんなサドルであってもロングライドでお尻が痛くなるなんてことはないのですが、当時はお尻が痛くなるのはサドルが原因じゃないか？なんて思って&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1b4a07c8.5ec8c127.1b4a07c9.a4619934/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fpalmy%2F888984%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjEsImJidG4iOjEsInByb2QiOjB9&quot;&gt;スパイダーサドル ツインテール&lt;/a&gt;というサドルを購入して交換しました。&lt;/p&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/spider_saddle.png&quot;&gt;&lt;img src=&quot;/images/spider_saddle.png&quot; alt=&quot;Spider Saddle&quot; width=&quot;320&quot; title=&quot;Spider Saddle&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;p&gt;　このスパイダーサドルはIDIOM2デフォルトのサドルより確かに柔らかいのですが、お尻が痛くなる原因はサドルではなく、主に乗車姿勢によるものだと思います。サドルにどっかり座るのではなく、自分の体重をしっかり足で支える意識を持って自転車に乗っていればどれだけ長距離乗っていてもお尻は痛くなりません。この頃、そのことが徐々に分かってきました。&lt;/p&gt;

&lt;h3 id=&quot;引き足を覚えるペダル交換&quot;&gt;引き足を覚える（ペダル交換）&lt;/h3&gt;
&lt;p&gt;　次に交換したのはペダルです。多くのローディはビンディングシューズを履いてペダルと靴を固定して自転車を漕ぎますが、自分は自転車はあくまで移動手段、ビンディングシューズのまま目的地や街中を歩くなんて嫌だったので、&lt;a href=&quot;https://www.amazon.co.jp/タイオガ-TIOGA-PDL07700-スパイダーペダル-ブラック/dp/B004BU9H7M&quot;&gt;スパイダーペダル&lt;/a&gt;を買って試しました&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。このペダルは普通のペダルと違い、写真のように縦長で数個の鋲が飛び出していて靴の裏にピッタリ引っかかります。ですので、ペダルを踏み込んだ後、足を引き上げる時にもペダルを回す感覚があります。&lt;br /&gt;
　ただこれを長期間使っていると靴底が傷んできます。&lt;/p&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/spider_pedal.png&quot;&gt;&lt;img src=&quot;/images/spider_pedal.png&quot; alt=&quot;Spider Pedal&quot; width=&quot;320&quot; title=&quot;Spider Pedal&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&quot;ハンドル位置を下げるコラムカット&quot;&gt;ハンドル位置を下げる（コラムカット）&lt;/h3&gt;
&lt;p&gt;　IDIOM2は折り畳み式のハンドルという特殊な構造で、フォークコラムに折り畳み可能な機構を持つパイプが乗っかっている形になっています。その折り畳み可能なパイプの代替となる鉄製パイプ（白色しかなかった）とコラム固定リングを自転車屋さんで入手出来た&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;のでそれに付け替えました。&lt;/p&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/column_cut.png&quot;&gt;&lt;img src=&quot;/images/column_cut.png&quot; alt=&quot;Column Cut&quot; width=&quot;320&quot; title=&quot;Column Cut&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;　30mmほどコラムカットもしました。&lt;br /&gt;
　これでようやくサドルとハンドルが水平になって見てくれもマシになったのと、ハンドル位置がこれぐらい下がると非常に自転車が漕ぎやすくなります。&lt;/p&gt;

&lt;h3 id=&quot;桐谷七段の爆走&quot;&gt;桐谷七段の爆走&lt;/h3&gt;
&lt;p&gt;　一頃テレビでよく&lt;a href=&quot;https://matome.naver.jp/odai/2136427379984682001&quot;&gt;桐谷七段が自転車で爆走するシーン&lt;/a&gt;をよく見ましたが、両肘張って上体を起こして自転車を漕ぐこの態勢では、風の抵抗も大きくかなり疲れると思います。テレビを見ながらもっとハンドル下げれば楽にスピード出せるのにと思ったものです。&lt;br /&gt;
　当時の私を含めてママチャリばかり乗っている日本人の多くは、サドルよりハンドル位置が低い態勢で乗ったことがなくてそのメリットが分からない人が多いと思うのですが、是非一度ハンドル位置を下げて乗ってみて欲しいと思います。自転車ってこういう風に乗るものだったのかと気付くと思います。&lt;br /&gt;
　また、自転車に長時間乗っているとお尻が痛くなるという人は、ハンドルを下げて前傾姿勢になれば、お尻への負担も減るので痛くなくなるかもしれません。&lt;/p&gt;

&lt;h3 id=&quot;ブルホーンハンドルに交換&quot;&gt;ブルホーンハンドルに交換&lt;/h3&gt;
&lt;p&gt;　さらにハンドル位置を下げたくなって、フラットバー（ライザーバー）ハンドルから&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1b4d851f.029a4119.1b4d8522.d009d163/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fcycle-yoshida%2F00600005%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjAsImJidG4iOjEsInByb2QiOjB9&quot;&gt;ブルホーンハンドル&lt;/a&gt;に交換しました。ただブルホーンハンドルに交換するだけだとブレーキ位置が遠くなるため、ステムも一番短い50mmのものに変更したので少し不格好です。&lt;/p&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/bull_horn.png&quot;&gt;&lt;img src=&quot;/images/bull_horn.png&quot; alt=&quot;Bull Horn&quot; width=&quot;320&quot; title=&quot;Bull Horn&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&quot;ドロップハンドルに交換&quot;&gt;ドロップハンドルに交換&lt;/h3&gt;
&lt;p&gt;　さらにハンドル位置を下げてみようと&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1b4ebe8f.7a15ae9e.1b4ebe90.9bb5cd88/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fbebike%2Fdeda-0333630001%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjAsImJidG4iOjEsInByb2QiOjB9&quot;&gt;ドロップハンドル&lt;/a&gt;にした時もありました。でもこれだとブレーキを使うためには常に下ハン（ハンドルの下を持った状態）になるので少し辛かったです。&lt;/p&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/drop_handle.png&quot;&gt;&lt;img src=&quot;/images/drop_handle.png&quot; alt=&quot;Drop Handle&quot; width=&quot;320&quot; title=&quot;Drop Handle&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;　やはり元々のフレームサイズが自分にあってないのだと思います。&lt;/p&gt;

&lt;h3 id=&quot;最終的にはフラットタイプのブルホーンに&quot;&gt;最終的にはフラットタイプのブルホーンに&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/flat_bullhorn.png&quot;&gt;&lt;img src=&quot;/images/flat_bullhorn.png&quot; alt=&quot;Flat Bull Horn&quot; width=&quot;320&quot; title=&quot;Flat Bull Horn&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;　前回の&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1b4d851f.029a4119.1b4d8522.d009d163/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fcycle-yoshida%2F00600005%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjAsImJidG4iOjEsInByb2QiOjB9&quot;&gt;ブルホーンハンドル&lt;/a&gt;は両肩が下がっていたのですが、&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1b4d851f.029a4119.1b4d8522.d009d163/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fcycle-yoshida%2F00615884%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjAsImJidG4iOjEsInByb2QiOjB9&quot;&gt;フラットなブルホーン&lt;/a&gt;にしてブレーキは手前につけることにしました。&lt;/p&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/compared.png&quot;&gt;&lt;img src=&quot;/images/compared.png&quot; alt=&quot;Bull Horn Compared&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/cycon.png&quot;&gt;&lt;img src=&quot;/images/cycon.png&quot; alt=&quot;ハンドル周り&quot; width=&quot;320&quot; title=&quot;ハンドル周り&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1b503d9f.bf04a72c.1b503da0.e1442817/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fi-selection%2Fb0106519%2F&amp;amp;link_type=pict&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJwaWN0Iiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjAsImJidG4iOjEsInByb2QiOjB9&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot; style=&quot;word-wrap:break-word;&quot;&gt;&lt;img src=&quot;https://hbb.afl.rakuten.co.jp/hgb/1b503d9f.bf04a72c.1b503da0.e1442817/?me_id=1276554&amp;amp;item_id=10023586&amp;amp;m=https%3A%2F%2Fthumbnail.image.rakuten.co.jp%2F%400_mall%2Fi-selection%2Fcabinet%2Fimg08%2Fb0106519.jpg%3F_ex%3D80x80&amp;amp;pc=https%3A%2F%2Fthumbnail.image.rakuten.co.jp%2F%400_mall%2Fi-selection%2Fcabinet%2Fimg08%2Fb0106519.jpg%3F_ex%3D240x240&amp;amp;s=240x240&amp;amp;t=pict&quot; border=&quot;0&quot; style=&quot;margin:2px&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ブレーキングに不満&quot;&gt;ブレーキングに不満&lt;/h3&gt;
&lt;p&gt;　肩下がりのブルホーンではなく、フラットタイプのブルホーンにしてブレーキをブラットバー部分に持ってきたことで乗車姿勢も楽になり、見た目のブレーキ位置も収まりがいい感じになりましたが、これではブルホーンの角部分を握っている時にブレーキが引けません。&lt;/p&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/break01.png&quot;&gt;&lt;img src=&quot;/images/break01.png&quot; alt=&quot;ブレーキング改善前&quot; width=&quot;320&quot; title=&quot;ブレーキング改善前&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;　上の写真のように薬指と小指でなんとかブレーキを引っ掛けることはできるのですが、心許ない感じです。ブルホーンハンドルではこの角の部分を握って走るのが一番気持ちよく走れるので、なんとかしたいと思いながらもミニベロに乗る機会が減っていたので長年放置していたのですが、つい最近&lt;a href=&quot;https://www.amazon.co.jp/SENQI自転車ホーンハンドルバーブレーキレバー-固定ギア-左右セット-22-2mm-23-8mm-2色/dp/B06XDYVK3F/ref=sr_1_10?__mk_ja_JP=カタカナ&amp;amp;dchild=1&amp;amp;keywords=senqi&amp;amp;qid=1589193186&amp;amp;sr=8-10&amp;amp;th=1&quot;&gt;こんな製品&lt;/a&gt;&lt;sup id=&quot;fnref:4&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;があることを知って買いました。&lt;/p&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/break02.png&quot;&gt;&lt;img src=&quot;/images/break02.png&quot; alt=&quot;ブレーキング改善後1&quot; width=&quot;320&quot; title=&quot;ブレーキング改善後1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;　これでようやく長年の不満が無くなった感じです。&lt;/p&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/break03.png&quot;&gt;&lt;img src=&quot;/images/break03.png&quot; alt=&quot;ブレーキング改善後2&quot; width=&quot;320&quot; title=&quot;ブレーキング改善後2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;　紹介した上記のカスタマイズはコラムカット以外は全部ネットで部品や道具を買って自分でやりました&lt;sup id=&quot;fnref:5&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&quot;知的好奇心によって目的が変わっていく&quot;&gt;知的好奇心によって目的が変わっていく&lt;/h3&gt;
&lt;p&gt;　自転車に関する本なども何冊か読んで理解が深まるほどいろいろ試したくなって、上記のようにいろいろ弄りまくったのですが、PCの自作も似ているところがあります。PCを自作したりカスタマイズすると何かプログラムを作る気力が湧いてくるように感じることがあるのですが、自転車も同じで、何かカスタマイズする度にロングライドに出かけていました。このバイクではせいぜい100kmぐらいですが、もう一つ持っている700Cのロードバイクでは夜通し丸１日かけて300km以上走ったこともあります。今は夜通し乗るなんていう気力はありませんが…。&lt;br /&gt;
　こうなってくると、最初は移動手段として自転車に乗っていたものが、自転車に乗ることが目的になって来たりします。この点もプログラミングと似ていて、何かの問題の解決手段であるはずのプログラミングがいつの間にかプログラミング自体が目的になって来たりします。それが良いとか悪いとかここで主張する気はありませんが、楽しいから続けているという感じです。&lt;/p&gt;

&lt;h3 id=&quot;日本人は自転車の乗り方を分かっていない&quot;&gt;日本人は自転車の乗り方を分かっていない&lt;/h3&gt;
&lt;p&gt;　&lt;a href=&quot;http://kaigai-matome.net/archives/35598234.html&quot;&gt;「日本人は自転車の乗り方を分かっていない」&lt;/a&gt;という記事を見かけたのですが、自分もこのミニベロのカスタマイズを通じて自転車に対する理解が深まってからは同感です。海外とは道路事情が違いますし、どっしりとサドルに腰掛けて傘を差して&lt;sup id=&quot;fnref:6&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;歩道をポタポタと走る日本の自転車文化を一概に否定するわけではありませんが、一度スポーツ系と言われるバイクに乗って見て欲しいと思います。そうするとママチャリしか乗ったことがない人は、自転車は本来こういう乗り方をするものだったのかという驚きがあると思います。&lt;br /&gt;
　そして自転車を買う時は自分のように適当に買うのではなく、自分の身長に合ったサイズのバイクを選ぶことをお勧めします。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;当時は分かっていなかったのですが、今ならミニベロなんて特殊なバイクを買うより、自分のサイズにあったロードバイクを最初に買うことをお勧めします。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;現在はスパイダーペダルは売っていないようです。似たようなペダルで、自分が持っているロードバイクの方は&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1b4d49cd.6bbf085f.1b4d49ce.c5e66119/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Faris%2F10-tioga-sf8%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjAsImJidG4iOjEsInByb2QiOjB9&quot;&gt;このペダル&lt;/a&gt;を使っています。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;なんでこんな特殊な部品が存在したのかは今でも謎ですが、ニーズが多かったのかもしれません。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;似たような製品で&lt;a href=&quot;https://hb.afl.rakuten.co.jp/ichiba/1b5d9f91.956dd233.1b5d9f92.9c201623/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fworldcycle%2Fdix-i-jc-brake%2F&amp;amp;link_type=hybrid_url&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MCwiYm9yIjoxLCJjb2wiOjAsImJidG4iOjEsInByb2QiOjB9&quot;&gt;DIXNAのこんな製品&lt;/a&gt;もあります。この製品、本来はドロップハンドルに使用する想定（ギドネットレバーのような感じ）のようですが、Amazonのレビューでもブルホーンで利用していると書かれています。 &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;ママチャリの後輪バンク修理を近所の自転車屋さんに頼んだ時に「バック拡げ」という日本のママチャリ独自の工具を使う現場を目撃してからは、むしろ街の自転車屋さんに自分のバイクのメンテナンスを任せたくない、自分でやりたいって感じです。 &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;ロードバイク乗るようになってからは、持っているママチャリもそれなりにカスタマイズしていて、傘を差しながら自転車に乗ることはなくなりました。というか、やってみると分かりますが、ハンドル位置を下げると、傘を差しながら自転車に乗るのが非常に難しいというか不安定になります。その所為かどうか分かりませんが、海外では傘を差して自転車に乗る習慣は無いようです。日本でも北海道では傘を差して自転車には乗らないと聞いたことがあります。 &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 16 May 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/miscellaneous/2020-05-16/bicycle01</link>
        <guid isPermaLink="true">https://happyclam.github.io/miscellaneous/2020-05-16/bicycle01</guid>
        
        <category>bicycle</category>
        
        
        <category>miscellaneous</category>
        
      </item>
    
      <item>
        <title>「Mini Chess - チェス６６」アプリリリース</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=chess66.io.github.happyclam&quot;&gt;&lt;img src=&quot;/images/ja_badge_web_generic.png&quot; alt=&quot;チェス６６&quot; title=&quot;Mini Chess - チェス６６&quot; width=&quot;155&quot; height=&quot;60&quot; /&gt;&lt;/a&gt;
&lt;!-- [![チェス６６](/images/amazon-appstore-badge-jp-white.png){: title=&quot;Mini Chess - チェス６６&quot; width=&quot;155&quot; height=&quot;60&quot;}][chess66app-amazon] --&gt;&lt;/p&gt;

&lt;h3 id=&quot;mini-chess---チェス６６について&quot;&gt;「Mini Chess - チェス６６」について&lt;/h3&gt;
&lt;p&gt;　６×６の盤で遊ぶミニチェスです。普通のチェスに飽きた方や、リリース済の&lt;a href=&quot;https://play.google.com/store/apps/details?id=carefreechess.io.github.happyclam&quot;&gt;「お気楽チェス」&lt;/a&gt;ではＡＩが弱すぎると感じている方にお勧めです。盤が小さくなったことでＡＩが若干強くなっていると思います。&lt;br /&gt;
　チェス盤の初期配置を編集・保存する機能があります。予め４つの初期配置を用意していますが、編集して独自の配置にして楽しんで下さい。&lt;/p&gt;

&lt;h3 id=&quot;ルール&quot;&gt;ルール&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;ポーンのダブルムーブ、アンパッサンはありません。キャスリングも無しです。&lt;/li&gt;
  &lt;li&gt;ポーンが成れる駒は初期配置によって決まります。初期配置にクイーンがない場合、クイーンには成れません。&lt;/li&gt;
  &lt;li&gt;ステイルメイトは引き分けです。&lt;/li&gt;
  &lt;li&gt;同一局面３回で千日手、引き分けです（ＡＩはなるべく千日手を避けるようになっています）。&lt;/li&gt;
  &lt;li&gt;その他はチェスのルールに準じます。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;機能&quot;&gt;機能&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;３つのＡＩレベル選択&lt;/li&gt;
  &lt;li&gt;ＡＩ対ＡＩ、人対ＡＩ、人対人の対戦&lt;/li&gt;
  &lt;li&gt;駒の可動箇所ガイド機能&lt;/li&gt;
  &lt;li&gt;ゲーム中断、途中再開機能&lt;/li&gt;
  &lt;li&gt;二ヶ国語対応（日本語、英語）&lt;/li&gt;
  &lt;li&gt;初期配置の選択機能&lt;/li&gt;
  &lt;li&gt;対局自動保存機能&lt;/li&gt;
  &lt;li&gt;４種類の初期配置の編集、保存機能&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;盤面&quot;&gt;盤面&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_board01.png&quot;&gt;&lt;img src=&quot;/images/chess66app_board01.png&quot; alt=&quot;チェス盤面１&quot; width=&quot;320&quot; title=&quot;チェス盤面１&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;駒は二種類から選べます。&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_board02.png&quot;&gt;&lt;img src=&quot;/images/chess66app_board02.png&quot; alt=&quot;チェス盤面２&quot; width=&quot;320&quot; title=&quot;チェス盤面２&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;ゲームを中断して前の局面に戻って再開することも出来ます。&lt;/li&gt;
  &lt;li&gt;ゲーム中に歯車のアイコンをタップすると強制的にゲームを中断して設定メニュー画面に移行します。ゲーム盤面に戻って再開ボタンをタップすれば続きからゲームを再開出来ます。&lt;/li&gt;
  &lt;li&gt;右上の矢印アイコンをタップすると盤面を回転表示します。&lt;/li&gt;
  &lt;li&gt;右上のキャレット（∧、∨）アイコンをタップすると取った駒の数と手数を表示します。もう一度タップすると非表示にします。端末の画面サイズに合わせてご利用ください。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ａｉレベル&quot;&gt;ＡＩレベル&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_menu01.png&quot;&gt;&lt;img src=&quot;/images/chess66app_menu01.png&quot; alt=&quot;ＡＩレベル&quot; width=&quot;320&quot; title=&quot;ＡＩレベル&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;ＡＩのレベルは３段階。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;初期配置選択&quot;&gt;初期配置選択&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_menu03.png&quot;&gt;&lt;img src=&quot;/images/chess66app_menu03.png&quot; alt=&quot;初期配置選択&quot; width=&quot;320&quot; title=&quot;初期配置選択&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;初期配置は一応４つのパターンを用意しましたが、編集可能なので好きな配置で楽しんで下さい。保存出来るのは４パターンです。ルールはすべてのパターンで同じになります。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;初期配置編集機能&quot;&gt;初期配置編集機能&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_menu04.png&quot;&gt;&lt;img src=&quot;/images/chess66app_menu04.png&quot; alt=&quot;初期配置編集&quot; width=&quot;320&quot; title=&quot;初期配置編集&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;左上のチェックマークアイコンをタップすると編集モードになります。&lt;/li&gt;
  &lt;li&gt;空いてる場所をタップすると駒選択ダイアログが表示されるので、駒を選ぶと新しく駒が配置されます。&lt;/li&gt;
  &lt;li&gt;既に駒があるところをタップすると駒が削除されます。&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_menu05.png&quot;&gt;&lt;img src=&quot;/images/chess66app_menu05.png&quot; alt=&quot;初期配置保存&quot; width=&quot;320&quot; title=&quot;初期配置保存&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;編集モード中はメニュー操作は出来ません。盤面を編集し終えたら保存か中止を選んで下さい。保存すると初期配置選択画面に反映されます。中止を選ぶと編集は無かったことになります。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;駒の動き&quot;&gt;駒の動き&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_menu02.png&quot;&gt;&lt;img src=&quot;/images/chess66app_menu02.png&quot; alt=&quot;移動ガイド&quot; width=&quot;320&quot; title=&quot;移動ガイド&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;駒の略号のアルファベットは棋譜に使用します。&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_board03.png&quot;&gt;&lt;img src=&quot;/images/chess66app_board03.png&quot; alt=&quot;チェス盤面３&quot; width=&quot;320&quot; title=&quot;チェス盤面３&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;駒をタップすると移動可能なマス目を表示します。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;自動保存機能&quot;&gt;自動保存機能&lt;/h3&gt;
&lt;p&gt;　メモリ逼迫時にAndroidによってアプリが強制終了されるケースがあるので、一手指す毎に棋譜を自動保存する機能があります。&lt;br /&gt;
不意にアプリが落ちても起動後「再開」ボタンをタップすることで対局の続きが可能です。&lt;br /&gt;
　※もし「Loading…」の表示が消えない場合は一度右上の歯車アイコンをタップして設定メニューを表示してから再開してください。&lt;br /&gt;
　※万が一自動保存に失敗して何らかのエラーが発生しても、「新規開始」すれば新たにファイルが作成されるので問題ありません。それでもエラーが表示される場合は、「アプリ情報」メニューから「ストレージ」を選んで「ストレージを消去」の操作をしてください。その際には対局データは消失し各種設定も初期化されますがご了承ください。&lt;/p&gt;

&lt;h3 id=&quot;評価値表示&quot;&gt;評価値表示&lt;/h3&gt;
&lt;div style=&quot;width:320px; margin: 0 auto;&quot;&gt;

  &lt;p&gt;&lt;a href=&quot;/images/chess66app_board04.png&quot;&gt;&lt;img src=&quot;/images/chess66app_board04.png&quot; alt=&quot;チェス盤面４&quot; width=&quot;320&quot; title=&quot;チェス盤面４&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;対戦相手にＡＩを選択すると、対戦中に局面の評価値を赤字で表示します。先手（White）が有利な場合は正の方向、後手（Black）が有利な場合は負の方向に評価値が変動します。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

</description>
        <pubDate>Sun, 23 Feb 2020 00:00:00 +0900</pubDate>
        <link>https://happyclam.github.io/project/2020-02-23/chess66app</link>
        <guid isPermaLink="true">https://happyclam.github.io/project/2020-02-23/chess66app</guid>
        
        <category>coffeescript</category>
        
        <category>cordova</category>
        
        <category>android</category>
        
        <category>javascript</category>
        
        <category>chess</category>
        
        
        <category>project</category>
        
      </item>
    
  </channel>
</rss>
