<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>自己満足プログラミング</title>
 <link href="http://happyclam.github.io/" rel="self"/>
 <link href="http://happyclam.github.io"/>
 <updated>2014-05-24T21:34:34+09:00</updated>
 <id>http://happyclam.github.io</id>
 <author>
   <name>happyclam</name>
   <email>happyclam.u@gmail.com</email>
 </author>

 
 <entry>
   <title>先物・オプションのシミュレーションサイト</title>
   <link href="http://happyclam.github.io/project/2014-05-24/my-posi"/>
   <updated>2014-05-24T00:00:00+09:00</updated>
   <id>http://happyclam.github.io/project/2014-05-24/my-posi</id>
   <content type="html">&lt;p&gt;Project: 「&lt;a href=&quot;http://my-posi.herokuapp.com/&quot;&gt;&lt;strong&gt;みんなのポジション&lt;/strong&gt;&lt;/a&gt;」: &lt;a href=&quot;https://github.com/happyclam/my-posi&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;開発の動機&lt;/h3&gt;

&lt;p&gt;当時、利用している証券会社のシステムが物足りなく信用できないものであったため自作しました。でも自分で作成した後、まもなくネット証券側もシステムをリニューアルして、自分のものより遥に高機能なものに置き換わったのですが、損益グラフを表示した時にグラフのメモリ幅を変更出来ないため見にくいという不満があったりするので、その点でまだは自分のソフトの方が優れているかなと思っています。まぁオプション売買を活発にしている人はそれ程多くないと思いますので、証券会社も力を入れていないのだと思います。５社ほどで取引したことありますが、そもそもオプション売買のシミュレーション機能なんて無い証券会社もありました。&lt;br/&gt;
最近は自分もあまりオプション取引をしていないのでよく知りませんが、今ではWebベースでもWindowsネイティブソフト並にユーザインターフェースに凝ったソフトを提供している証券会社があるかもしれません。&lt;/p&gt;

&lt;h3&gt;機能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;日経225先物、日経225先物ミニ、日経225オプション(CALL,PUT)の建玉を一つのポジション、複数のポジションをまとめたものをストラテジーとして、ユーザ毎の複数のストラテジーの保存。&lt;/li&gt;
&lt;li&gt;複数の建玉の売買シミュレーションと損益推移（個別・合算）グラフを表示&lt;br/&gt;
※ブラックショールズモデルを利用したオプション理論価格計算に対応しているので、満期（SQ）時の損益だけでなく、現時点での原資産価格（日経225先物価格）毎の損益推移を表示出来ます&lt;/li&gt;
&lt;li&gt;twitterを利用したユーザー認証とポジションをtwitterで呟く&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;ER図&lt;/h3&gt;

&lt;object data=&quot;/pdf/ERD.pdf&quot; width=&quot;760&quot; height=&quot;480&quot;&gt;
&lt;p&gt;ご覧の環境では、object要素がサポートされていないようです。&lt;a href=&quot;/pdf/ERD.pdf&quot;&gt;PDFファイルをダウンロードしてください&lt;/a&gt;&lt;/p&gt;
&lt;/object&gt;


&lt;p&gt;UserモデルとStrategyモデルが1対多、StrategyモデルとPositionモデルが1対多で関連付けられている単純なテーブル構造です。&lt;br/&gt;
他のテーブルと関連付けられていないCandlestickモデルというのはネット上に転がっている先物価格のロウソク足用のcsvデータを流し込むためのテーブルで、ヒストリカル・ボラティリティ（HV）を計算するためだけに使用しています。HVの計算方法には色々あるようですが、自分が使用したのは&lt;a href=&quot;http://www.option-dojo.com/kn/225_vola.html&quot;&gt;ここ&lt;/a&gt;に記載されている方法に倣っています。&lt;br/&gt;
気が向いたときにcsvデータを手動で更新するという運用の仕方をしてました。画面から手入力するとその値を優先して使用するようにしているので、実際にはHVを手入力して使うことが多かったです。開発当時は無かったのですが、今なら日経平均ボラティリティインデックスがリアルタイムで更新されているのでその値を手入力する方がいいかもしれません。20%（日経平均VIが20ポイント）であれば0.2を入力します。このHVの値を使ってオプション理論価格を算出します。&lt;br/&gt;
※ボラティリティにはHVとは別にインプライド・ボラティリティ（IV）というものがありますが、ボラティリティに関しては別記事を書こうと思います。&lt;/p&gt;

&lt;h3&gt;テーブル構造&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Userテーブル&lt;/em&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 名称         &lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 内容                                           &lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 例            &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; name         &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; サイト内で使用する独自のユーザ名                 &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; provider     &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; twitter認証APIで返される文字列                  &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; &quot;twitter&quot;     &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; screen_name  &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; twitter認証APIで返される文字列                  &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; &quot;SappierBoy&quot;  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; uid          &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; twitter認証APIで返される文字列                  &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; &quot;1111111111&quot;  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Strategyテーブル&lt;/em&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 名称         &lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 内容                                                &lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 例            &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; draw_type    &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 損益グラフを個別表示するか合算表示するか              &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 1,未定義      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; interest     &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 金利                                                &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 0.02          &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; name         &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; ストラテジー名                                       &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; &quot;abc戦略&quot;     &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; range        &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; グラフの幅デフォルト500とした相対数値で拡大・縮小      &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 500          &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; sigma        &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; オプション理論価格計算に使用するボラティリティ(HV)     &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 0.2          &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Positionテーブル&lt;/em&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 名称         &lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 内容                                           &lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt; 例            &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; distinct     &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 商品種別（日経225先物、日経225先物mini、CALLオプション、PUTオプション） &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;       &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; exercise     &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 行使価格（オプションの場合のみ、先物の場合はnil） &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 0.02          &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; expiration   &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 限月（満期月）                                  &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; &quot;2014/06&quot;     &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; maturity     &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 残存日数（1日に満たない場合も日数換算）          &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 0.1～365      &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; number       &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; オプション理論価格計算に使用するボラティリティ    &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 0.2           &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; sale         &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 売り、買いの区別                                &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;               &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; unit         &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt; 商品単価                                        &lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;               &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Candlestickテーブル&lt;/em&gt;&lt;br/&gt;
※どこから先物価格のデータを取得するかでテーブル構造は変わるので省略します。必要なのはオプションの原資産となる先物価格の終値20日分です。私が利用していたのは&lt;a href=&quot;http://k-db.com/&quot;&gt;このサイト&lt;/a&gt;です。&lt;br/&gt;
以下のようにcsvデータをダウンロード&lt;br/&gt;
&lt;code&gt;
wget -O ./lib/futures.csv &quot;http://k-db.com/site/jikeiretsuF.aspx?c=101&amp;amp;year=0&amp;amp;download=csv&quot;  
&lt;/code&gt;&lt;br/&gt;
csvデータから先物価格データを格納    &lt;br/&gt;
&lt;code&gt;  
rails runner Candlestick::biteoff
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;参考文献&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.co.jp/%E4%B8%96%E7%95%8C%E4%B8%80%E3%82%84%E3%81%95%E3%81%97%E3%81%84%E9%87%91%E8%9E%8D%E5%B7%A5%E5%AD%A6%E3%81%AE%E6%9C%AC%E3%81%A7%E3%81%99-%E7%94%B0%E6%B8%95-%E7%9B%B4%E4%B9%9F/dp/4534040512]&quot;&gt;「世界一やさしい金融工学の本です」&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>rspecに納得できない</title>
   <link href="http://happyclam.github.io/programming/2014-05-17/inflexible-rspec"/>
   <updated>2014-05-17T00:00:00+09:00</updated>
   <id>http://happyclam.github.io/programming/2014-05-17/inflexible-rspec</id>
   <content type="html">&lt;p&gt;先日衝動買いした&lt;a href=&quot;http://www.amazon.co.jp/Instant-RSpec-Test-Driven-Development-How-ebook/dp/B00DMYO1QK&quot;&gt;Instant RSpec Test-Driven Development How-to [Kindle版]&lt;/a&gt;の最初に出てくるサンプルコード&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby:location_spec.rb&quot;&gt;describe Location do
  describe &quot;#initialize&quot; do
    it &quot;sets the latitude and longitude&quot; do
      loc = Location.new(:latitude =&amp;gt; 38.911268,
                         :longitude =&amp;gt; -77.444243)
      loc.latitude.should == 38.911268
      loc.longitude.should == -77.444243
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;上記テストを通過させるために「自分が書いたコード」が以下のもの&lt;code&gt;rspec failed&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;&lt;code class=&quot;ruby:my_answer.rb  &quot;&gt;   class  Location  
       attr_accessor :latitude  
       attr_accessor :longitude  
       def initialize(lati=nil, long=nil)  
           @latitude = lati  
           @longitude = long  
       end  
   end  
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;「リファクタリング前のコード」として本で紹介されているコード&lt;code&gt;rspec passed&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;&lt;code class=&quot;ruby:bad_answer.rb&quot;&gt;   class  Location
       def initialize(args = {});end
       def latitude
           38.911268
       end
       def longitude
           -77.444243
       end
   end
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;「リファクタリング後のコード」として本で紹介されているコード&lt;code&gt;rspec passed&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;&lt;code class=&quot;ruby:model_answer.rb&quot;&gt;   class Location
       attr_accessor :latitude, :longitude
       def initialize(args = {})
           self.latitude = args[:latitude]
           self.longitude = args[:longitude]
       end
   end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テストを通過させるためだけに書かれたような「リファクタリング前のコード」がエラーにならないのに、上記「自分のコード」がエラーになるのは納得がいかない。&lt;br/&gt;
自分のコードに何かエラーにしなければならない理由があるのか？自分にはわからないので誰か教えてください。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll Bootstrapのテンプレート　</title>
   <link href="http://happyclam.github.io/practice/2014-01-12/jekyll-bootstrap"/>
   <updated>2014-01-12T00:00:00+09:00</updated>
   <id>http://happyclam.github.io/practice/2014-01-12/jekyll-bootstrap</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2012/05/13/first-step-of-jekyll/&quot;&gt;「30分のチュートリアルでJekyllを理解する」&lt;/a&gt;を見て一通り理解できたので、見た目を格好良くしようと思い&lt;a href=&quot;http://jekyllbootstrap.com/usage/jekyll-theming.html&quot; title=&quot;Jekyll-bootstrap&quot;&gt;Jekyll Bootstrap&lt;/a&gt;のテーマをダウンロードして適用しました。そうしたらそれまで見れていたサイトgithub pages(http://username.github.io/)が表示されなくなったのでその顛末を書いています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;まずgithubから &lt;br/&gt;
&lt;code&gt;The submodule &#39;xxxxx&#39; was not properly initialized with a &#39;.gitmodules&#39; file.&lt;/code&gt;&lt;br/&gt;
というメールが来た。どうもsubmoduleというのがよく分からなかったのだけど&lt;a href=&quot;http://qiita.com/sotarok/items/0d525e568a6088f6f6bb&quot; title=&quot;Git submodule の基礎&quot;&gt;ここ&lt;/a&gt;を参考に解決&lt;br/&gt;
&lt;code&gt;jekyll build&lt;/code&gt;で静的ファイルを生成したはずだから、build後はテンプレートは必要ないのかと思ったけどsubmoduleとしてcommitしなければいけないらしい。今までgit使っていてsubmoduleなんて使ったこと無かったけど、submodule内のcommitは外のcommitとは別途実行する必要（当然といえば当然だけど）があるみたいで、なんだかややこしそうな仕組みだ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;次に来たメールがこんなの&lt;br/&gt;
&lt;code&gt;The tag &#39;math&#39; in &#39;xxxxx&#39; is not a recognized Liquid tag.&lt;/code&gt;&lt;br/&gt;
&lt;a href=&quot;http://melborne.github.io/2012/05/13/first-step-of-jekyll/&quot; title=&quot;30分のチュートリアルでJekyllを理解する&quot;&gt;数式を表示するプラグイン（Mathjax.rb）&lt;/a&gt;を試しに使っていたのだが、テンプレートを適用したためテンプレート内に存在するdefault.htmlを修正する必要が出てきた。テンプレート内のファイルに変更を加えたらテンプレートをupdateしたときに問題が出るんじゃないの？と思いながらもとりあえずテンプレート内のdefault.html&lt;a href=&quot;#fn1&quot;&gt;&lt;sup&gt;*1&lt;/sup&gt;&lt;/a&gt;にMathJax.jsを読み込むコードを追加&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ようやく表示出来るかとおもったら、また次のようなメールが&lt;br/&gt;
&lt;code&gt;page build failed&lt;/code&gt;&lt;br/&gt;
今回のメールは理由が書いていない。どうすりゃいいの？ローカルでは問題ないのに。&lt;br/&gt;
googleで検索すると&lt;a href=&quot;http://modalsoul.github.io/environment/2013/08/17/Github-pages-build-failure/&quot;&gt;ここ&lt;/a&gt;にいろんなケースが書いてあった。こんなこと全部はやってられるかって感じ。herokuでも感じていたけど、やりたいことと関係ないところで手間がかかるから、運用の手間は増えるけどEC2とかを使って全部自分でサーバー環境作るべきか？とか思案に耽ってしまった。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;気分を入れ替えてgithubのレポジトリを削除して作り直すことにした。そもそも&lt;a href=&quot;http://krakenbeal.blogspot.jp/2012/05/ruby-jekyll-jekyll-bootstrap.html&quot;&gt;このサイト&lt;/a&gt;を参考にjekyllのbuild環境を含めてレポジトリを作ったのだけど、githubにある「Automatic Page Generator」のボタンをクリックしてレポジトリを新しく作り直してみると、リポジトリには生成された静的コンテンツのみが含まれていた。ということはgithubのリポジトリにはjekyllで生成された結果ファイルのみを含めるべきなのか？まぁgeneratorとはそうやって使うのが普通だろうけど、herokuを使っている自分としては開発環境（というかファイル生成環境）毎pushするのかと思っていたので少々面食らった。githubからbuild errorの通知メールを送ってくれるわけだからgithub側で自動buildしてくれる仕組みはあるようだけど、ローカル環境でbuildした結果だけをpushしても問題はないようだ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;結論。&lt;/strong&gt;やったのは以下の３作業だけ。ネットで検索しているとgh-pagesブランチを作れとか書いてあるが、別ブランチを作ったらgithubからbuild errorのメールが届いたのでmasterブランチのままです。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;1 githubのメニューからusername.github.ioという名前のrepositoryを新規作成&lt;br/&gt;
2 ローカル環境にcloneして、jekyll generatorで出力した_siteディレクトリ以下のファイルをcopyしてcommit&lt;br/&gt;
  &lt;code&gt;git clone https://github.com/username/username.github.io.git&lt;/code&gt;&lt;br/&gt;
  &lt;code&gt;cp -rp ../localrepository/_site/* .&lt;/code&gt;&lt;br/&gt;
  &lt;code&gt;git commit -a -m &quot;copy from _site directory of jekyll project&quot;&lt;/code&gt;&lt;br/&gt;
3 masterブランチとしてpush&lt;br/&gt;
  &lt;code&gt;git push origin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;  何かネットの情報に振り回されて余計な時間を喰ってしまった感じです。githubの仕様が変わったのか、今頃github-pagesに手を出す私は珍しいのか、ローカルにjekyllをインストールして使う人は少ないのか知りませんが、上に書いた手順を紹介しているサイトは見かけなかったので、何か間違っているのかもしれませんが。このやり方で運用しようと思います。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;fn1&quot;&gt;*1&lt;/a&gt;default.htmlが複数あってややこしいですが、テンプレート内のファイルを変更する必要は無く、_include/以下にあるdefault.htmlを変更すればいいようです。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllの練習</title>
   <link href="http://happyclam.github.io/practice/2014-01-10/jekyll-practice"/>
   <updated>2014-01-10T00:00:00+09:00</updated>
   <id>http://happyclam.github.io/practice/2014-01-10/jekyll-practice</id>
   <content type="html">&lt;p&gt;jekyllで数式出力を試してみた。&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;
Formular\ from Wikipedia\\

\int_0^3 9x^2 + 2x + 4\, dx = 3x^3 + x^2 + 4x + C \Big\rbrack_0^3 = 102\\

e^{x+iy} = e^x(\cos y + i\sin y)\\

x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
  \\
Simple\ FDTD\ Algorithm\ and\ Devils\ in\ the\ Details \\
\begin{eqnarray}
\psi(x,t + \Delta t) &amp;=&amp; -\psi(x, t - \Delta t) + [2 + \frac{v^2\Delta t^2}{\Delta x ^2} d_x^2] \psi(x,t) \\
                       &amp;=&amp; -\psi(x, t - \Delta t) + 2\psi(x,t) + \frac{v^2\Delta t^2}{\Delta x ^2} d_x^2 \psi(x,t) \\
                       &amp;=&amp; -\psi(x, t - \Delta t) + 2\psi(x,t) + \frac{v^2\Delta t^2}{\Delta x ^2}
                       [ \psi(x - \Delta x, t) + \psi(x + \Delta x, t) - 2 \psi(x, t) ] \\
\end{eqnarray}

&lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>shoesおもしろい</title>
   <link href="http://happyclam.github.io/practice/2014-01-09/ruby-is-great"/>
   <updated>2014-01-09T00:00:00+09:00</updated>
   <id>http://happyclam.github.io/practice/2014-01-09/ruby-is-great</id>
   <content type="html">&lt;h2&gt;shoesとは&lt;/h2&gt;

&lt;p&gt;shoesはrubyで作られたgui開発ツールです。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/5485761.js?file=drawing.rb&quot;&gt; &lt;/script&gt;


&lt;h2&gt;Try Ruby&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;     &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;     &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello, friend!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; Myname is #[@name}!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;happyclam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;happyclam&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;happyclam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; Hello, friend!&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; My name is happyclam!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



</content>
 </entry>
 
 
</feed>